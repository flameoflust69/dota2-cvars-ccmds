{
    "+bugvoice": {
        "description": "Start recording bug voice attachment.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 232
    },
    "+camdistance": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1393
    },
    "+cammousemove": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1391
    },
    "+chatwheel": {
        "description": "Opens chatwheel menu while held",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 969
    },
    "+chatwheel2": {
        "description": "Opens the second chatwheel menu while held",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 971
    },
    "+dota_ability_execute": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 965
    },
    "+dota_camera_center_on_hero": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1250
    },
    "+dota_camera_follow": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1248
    },
    "+dota_control_group": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1239
    },
    "+dota_filter_ally": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1298
    },
    "+dota_filter_enemy": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1296
    },
    "+dota_filter_hero": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1101
    },
    "+dota_filter_non_hero": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1103
    },
    "+dota_hud_overlaymap_inputkey": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 993
    },
    "+dota_hud_toggle_overlaymap": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 991
    },
    "+dota_stop": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1260
    },
    "+dota_unit_movetodirection": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1264
    },
    "+herochatwheel": {
        "description": "Opens hero chatwheel menu while held",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 974
    },
    "+midi_note": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1154
    },
    "+showitems": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 865
    },
    "+showscores": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 856
    },
    "-bugvoice": {
        "description": "Finish recording bug voice attachment.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 233
    },
    "-camdistance": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1394
    },
    "-cammousemove": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1392
    },
    "-chatwheel": {
        "description": "Executes the highlighted chatwheel menu item",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 970
    },
    "-chatwheel2": {
        "description": "Executes the highlighted chatwheel menu item",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 972
    },
    "-dota_ability_execute": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 966
    },
    "-dota_camera_center_on_hero": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1251
    },
    "-dota_camera_follow": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1249
    },
    "-dota_control_group": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1240
    },
    "-dota_filter_ally": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1100
    },
    "-dota_filter_enemy": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1297
    },
    "-dota_filter_hero": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1102
    },
    "-dota_filter_non_hero": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1104
    },
    "-dota_hud_overlaymap_inputkey": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 994
    },
    "-dota_hud_toggle_overlaymap": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 992
    },
    "-dota_stop": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1261
    },
    "-dota_unit_movetodirection": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1265
    },
    "-herochatwheel": {
        "description": "Executes the highlighted hero chatwheel menu item",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 975
    },
    "-midi_note": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1155
    },
    "-showitems": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 866
    },
    "-showscores": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 857
    },
    "StackStats_Dump": {
        "description": "Dump a named stackstats structure to disk. Usage: stackstats_dump \"structname\" [\"filename\"]",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 138
    },
    "Test_Checkpoint": {
        "description": "Indicate to a test script that a checkpoint has been reached",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 17
    },
    "Test_ExitProcess": {
        "description": "Test_ExitProcess <exit code> - immediately kill the process.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 10
    },
    "Test_Loop": {
        "description": "Test_Loop <loop name> - loop back to the specified loop start point unconditionally.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 13
    },
    "Test_LoopCount": {
        "description": "Test_LoopCount <loop name> <count> - loop back to the specified loop start point the specified # of times.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 12
    },
    "Test_LoopForNumSeconds": {
        "description": "Test_LoopForNumSeconds <loop name> <time> - loop back to the specified start point for the specified # of seconds.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 14
    },
    "Test_RandomChance": {
        "description": "Test_RandomChance <percent chance, 0-100> <token1> <token2...> - Roll the dice and maybe run the command following the percentage chance.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 15
    },
    "Test_StartLoop": {
        "description": "Test_StartLoop <loop name> - Denote the start of a loop. Really just defines a named point you can jump to.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 11
    },
    "Test_StartScript": {
        "description": "Start a test script running..",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 16
    },
    "_record": {
        "description": "Record a demo incrementally.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 141
    },
    "activategameui": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1122
    },
    "addip": {
        "description": "Add an IP address to the ban list.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 186
    },
    "addons": {
        "description": "list current addon info.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 24
    },
    "alias": {
        "description": "Alias a command.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 68
    },
    "anim_dump_update_list": {
        "description": "Displays stats about which animations are updating",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 753
    },
    "anim_eval_stats": {
        "description": "Displays stats about how many EvaluatePose calls are unused",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 763
    },
    "animevents_dump": {
        "description": "List all the currently registered anim events.\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 709
    },
    "animgraph_dump_update_list": {
        "description": "Displays stats about which animations are updating",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 762
    },
    "animgraph_set_parameter_bool": {
        "description": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.\n\tArguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 805
    },
    "animgraph_set_parameter_enum": {
        "description": "Specified entities will have the specified enum parameter set to the value specified.  Useful for animators to test.\n\tArguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 809
    },
    "animgraph_set_parameter_float": {
        "description": "Specified entities will have the specified float parameter set to the value specified.  Useful for animators to test.\n\tArguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 807
    },
    "animgraph_set_parameter_int": {
        "description": "Specified entities will have the specified int parameter set to the value specified.  Useful for animators to test.\n\tArguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 806
    },
    "animgraph_set_parameter_string": {
        "description": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.\n\tArguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 804
    },
    "animgraph_set_parameter_vector": {
        "description": "Specified entities will have the specified vector parameter set to the value specified.  Useful for animators to test.\n\tArguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 808
    },
    "ar_fade_in": {
        "description": "Fade In AR",
        "flags": "devonly, client, hidden",
        "flagsRaw": 26,
        "hasDefensiveFlag": true,
        "index": 1147
    },
    "auto_bug": {
        "description": "auto_bug : create non-interactive bug report.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 231
    },
    "autosave": {
        "description": "Autosave",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 725
    },
    "autosavedangerous": {
        "description": "AutoSaveDangerous",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 724
    },
    "autosavedangerousissafe": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 726
    },
    "axis": {
        "description": "Draw an axis\n\tArguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 801
    },
    "banid": {
        "description": "Add a user ID to the ban list.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 190
    },
    "banip": {
        "description": "Add an IP address to the ban list.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 185
    },
    "benchframe": {
        "description": "Takes a snapshot of a particular frame in a time demo.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 147
    },
    "bind": {
        "description": "Bind a key.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 58
    },
    "binddefaults": {
        "description": "Bind all keys to their default values.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 63
    },
    "bindss": {
        "description": "Bind a key for a particular splitscreen player.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 59
    },
    "bindtoggle": {
        "description": "Performs a bind <key> \"increment var <cvar> 0 1 1\".",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 60
    },
    "blink": {
        "description": "Blink specified convar value between two values at the specified duration.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 48
    },
    "bounty_completed_test": {
        "description": "<killer_id> <victim_id>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1164
    },
    "bounty_toast_test": {
        "description": "<toast_type> <killer_id> <victim_id>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1165
    },
    "box": {
        "description": "Draw a bbox\n\tArguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 800
    },
    "broadcaster_addfacts": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 947
    },
    "broadcaster_annotatefacts": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 948
    },
    "broadcaster_build_ability_movie_loc": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 949
    },
    "broadcaster_openmenu": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 942
    },
    "broadcaster_openquickstats": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 943
    },
    "broadcaster_reloadfacts": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 946
    },
    "broadcaster_setsecondaryquickstats": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 945
    },
    "broadcaster_togglegreenscreen": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 944
    },
    "bug": {
        "description": "bug [auto_fill_tokens] [-title <text>] [-noscreenshot] : Activate the bug reporter.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 230
    },
    "bugvoice_clear": {
        "description": "Clear voice attachment data.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 234
    },
    "bugvoice_save": {
        "description": "Write buffered voice attachment data to file.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 235
    },
    "buildcubemaps": {
        "description": "Build Cubemaps",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1408
    },
    "button_info": {
        "description": "Display information about the specified key or button.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 46
    },
    "cam_command": {
        "description": "Tells camera to change modes",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1385
    },
    "camera_cut_to_datadriven_camera": {
        "description": "",
        "flags": "devonly, client, hidden",
        "flagsRaw": 26,
        "hasDefensiveFlag": true,
        "index": 1281
    },
    "camerazoomin": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1375
    },
    "camerazoomout": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1376
    },
    "cameron_test": {
        "description": "For Cameron",
        "flags": "devonly, client, hidden",
        "flagsRaw": 26,
        "hasDefensiveFlag": true,
        "index": 1197
    },
    "camortho": {
        "description": "Switch to orthographic camera.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1390
    },
    "cancelselect": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1219
    },
    "capturecubemap": {
        "description": "Capture Cubemap",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1409
    },
    "cast_aabb": {
        "description": "Tests box collision detection",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 568
    },
    "cast_capsule": {
        "description": "Tests capsule collision detection",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 569
    },
    "cast_convex": {
        "description": "Tests convex hull collision detection",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 570
    },
    "cast_cylinder": {
        "description": "Tests cylinder collision detection",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 571
    },
    "cast_intervals": {
        "description": "Tests interval ray cast",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 574
    },
    "cast_obb": {
        "description": "Tests cylinder collision detection",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 572
    },
    "cast_physics": {
        "description": "Tests physics shape collision detection",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 573
    },
    "cast_ray": {
        "description": "Tests ray cast",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 566
    },
    "cast_sphere": {
        "description": "Tests sphere cast",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 567
    },
    "cavern_crawl_force_refresh": {
        "description": "Debug utility for cavern crawl",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 935
    },
    "cavern_crawl_reload_layout": {
        "description": "Debug utility for cavern crawl",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 934
    },
    "cavern_crawl_toggle_debug": {
        "description": "Debug utility for cavern crawl",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 933
    },
    "cavern_crawl_ui_debug_flare": {
        "description": "Debug utility for flare",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 939
    },
    "cavern_crawl_ui_debug_inventory": {
        "description": "Debug utility for inventory",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 937
    },
    "cavern_crawl_ui_debug_swap": {
        "description": "Debug utility for swap",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 938
    },
    "cavern_crawl_ui_generate_path_pos": {
        "description": "Generates Path Positions",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 936
    },
    "cc_emit": {
        "description": "Emits a closed caption",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1225
    },
    "cc_findsound": {
        "description": "Searches for soundname which emits specified text.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1229
    },
    "cc_flush": {
        "description": "Flushes async'd captions.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1227
    },
    "cc_random": {
        "description": "Emits a random caption",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1226
    },
    "cc_showblocks": {
        "description": "Toggles showing which blocks are pending/loaded async.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1228
    },
    "changelevel": {
        "description": "changelevel <mapname> :Multiplayer change level.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 73
    },
    "chat_channel_debug": {
        "description": "Print members of a chat channel",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1161
    },
    "chat_debug_add_members": {
        "description": "Adds dummy members to a chat channel",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1160
    },
    "chat_join": {
        "description": "Join a chat channel",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1156
    },
    "chat_join_hltv": {
        "description": "Join an hltv chat channel",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1157
    },
    "chat_leave": {
        "description": "Leave a chat channel",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1158
    },
    "chat_say": {
        "description": "Send a message to the specified channel",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1159
    },
    "chatwheel_say": {
        "description": "Send a chatwheel message. Usage: chatwheel_say <messagenum>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 973
    },
    "check_game_mode": {
        "description": "Checks game mode is up to date",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 888
    },
    "cl_anim_dump_update_list": {
        "description": "Displays stats about which animations are updating",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1399
    },
    "cl_anim_eval_stats": {
        "description": "Displays stats about how many EvaluatePose calls are unused",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1411
    },
    "cl_animgraph_dump_update_list": {
        "description": "Displays stats about which animations are updating",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1410
    },
    "cl_axis": {
        "description": "Draw an axis\n\tArguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>\n",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1447
    },
    "cl_box": {
        "description": "Draw a bbox\n\tArguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>\n",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1446
    },
    "cl_break_on_missing_resource": {
        "description": "Break in debugger when missing resource match is found.\nFormat: cl_break_on_missing_resource <substring> /(empty to break on all) / 0 to turn off.\n",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 236
    },
    "cl_checkdeclareclasses": {
        "description": "Check game code serializers",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 177
    },
    "cl_commandtool_exec": {
        "description": "Runs a command from the command tool",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1528
    },
    "cl_debugoverlay_cycle_domain": {
        "description": "Toggles visibility of the debug overlay system.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1331
    },
    "cl_debugoverlay_cycle_state": {
        "description": "Toggles visibility of the debug overlay system.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1332
    },
    "cl_debugoverlay_hide_imgui": {
        "description": "Hides the overlay.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1333
    },
    "cl_debugoverlay_toggle": {
        "description": "Toggles visibility of the debug overlay system.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1330
    },
    "cl_decal_clear_all_entities": {
        "description": "Clears decals from all entities",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1526
    },
    "cl_decal_clear_world": {
        "description": "Clears world decals",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1525
    },
    "cl_decal_debug": {
        "description": "Toggles client decal debug visualization",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1522
    },
    "cl_decal_shoot": {
        "description": "Shoots a client-side decal",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1523
    },
    "cl_destroy_ragdolls": {
        "description": "Destroys all client-side ragdolls",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1200
    },
    "cl_dota_contextual_tips_reload": {
        "description": "Reload the contextual tips definition file",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1311
    },
    "cl_dota_contextual_tips_reset_history": {
        "description": "Resets the contextual tips clouded history file",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1310
    },
    "cl_dota_dump_econ_item_stringtable": {
        "description": "cl_dota_dump_econ_item_stringtable",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 887
    },
    "cl_dota_dump_modifier_stringtable": {
        "description": "cl_dota_dump_modifier_stringtable",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1306
    },
    "cl_dota_rubick_arcana_reload": {
        "description": "Reload the rubick arcana descriptor file",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1130
    },
    "cl_dota_showents": {
        "description": "Dump entity list to console.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1315
    },
    "cl_drawcross": {
        "description": "Draws a cross at the given location\n\tArguments: x y z",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1445
    },
    "cl_drawline": {
        "description": "Draws line between two 3D Points.\n\tGreen if no collision\n\tRed is collides with something\n\tArguments: x1 y1 z1 x2 y2 z2",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1444
    },
    "cl_dump_modifier_list": {
        "description": "Dumps all modifiers that exist in the game",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1307
    },
    "cl_dump_projected_texture_count": {
        "description": "Print out number of active projected textures",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1361
    },
    "cl_dump_response_symbols": {
        "description": "print all response symbols to the console",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1323
    },
    "cl_dumpentity": {
        "description": "Dumps info about an entity",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1455
    },
    "cl_dumpsplithacks": {
        "description": "Dump split screen workarounds.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1377
    },
    "cl_ent_absbox": {
        "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1425
    },
    "cl_ent_actornames": {
        "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1415
    },
    "cl_ent_animgraph_debug": {
        "description": "Displays debug draws about the given entity(ies) animgraph\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1327
    },
    "cl_ent_animgraph_record": {
        "description": "Toggles recording of animgraph replay of the given entity(s)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1442
    },
    "cl_ent_attachments": {
        "description": "Displays the attachment points on an entity.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1426
    },
    "cl_ent_bbox": {
        "description": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1424
    },
    "cl_ent_call": {
        "description": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1403
    },
    "cl_ent_clear_debug_overlays": {
        "description": "Clears all debug overlays",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1438
    },
    "cl_ent_find": {
        "description": "Find and list all entities with classnames or targetnames that contain the specified substrings.\nFormat: find_ent <substring>\n",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1406
    },
    "cl_ent_find_index": {
        "description": "Display data for entity matching specified index.\nFormat: find_ent_index <index>\n",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1407
    },
    "cl_ent_grab": {
        "description": "grabs the object in front of the player. Options: -loose -multiple -toggle",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1412
    },
    "cl_ent_hierarchy": {
        "description": "Prints the entity hierarchy tree rooted at the specified ent(s)",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1456
    },
    "cl_ent_hitbox": {
        "description": "Displays the hitboxes for the given entity(ies).\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1432
    },
    "cl_ent_joints": {
        "description": "Displays the joint names + axes an entity.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1427
    },
    "cl_ent_messages": {
        "description": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1435
    },
    "cl_ent_name": {
        "description": "Displays the entity name",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1414
    },
    "cl_ent_picker": {
        "description": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.\n\tArguments:\tfull - enables all debug information",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1436
    },
    "cl_ent_pivot": {
        "description": "Displays the pivot for the given entity(ies).\n\t(y=up=green, z=forward=blue, x=left=red). \n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1429
    },
    "cl_ent_remove": {
        "description": "Removes the given entity(s)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1440
    },
    "cl_ent_remove_all": {
        "description": "Removes all entities of the specified type\n\tArguments:   \t{entity_name} / {class_name} ",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1441
    },
    "cl_ent_scale": {
        "description": "Scales entities.\tArguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1439
    },
    "cl_ent_scenehierarchy": {
        "description": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1457
    },
    "cl_ent_script_dump": {
        "description": "Dumps the names and values of this entity's script scope to the console\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1404
    },
    "cl_ent_select": {
        "description": "Select or deselects the given entities(s) for later manipulation\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1434
    },
    "cl_ent_setang": {
        "description": "Set entity angles",
        "flags": "client, cheat",
        "flagsRaw": 33570824,
        "hasDefensiveFlag": false,
        "index": 1402
    },
    "cl_ent_setname": {
        "description": "Sets the targetname of the given entity(s)\n\tArguments:   \t<new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1405
    },
    "cl_ent_setpos": {
        "description": "Move entity to position",
        "flags": "client, cheat",
        "flagsRaw": 33570824,
        "hasDefensiveFlag": false,
        "index": 1401
    },
    "cl_ent_show_damage": {
        "description": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1437
    },
    "cl_ent_skeleton": {
        "description": "Displays the skeleton for the given entity(ies).\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1431
    },
    "cl_ent_spew_derived_classes": {
        "description": "Prints out all entity classes which inherit from a specified base class",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1342
    },
    "cl_ent_text": {
        "description": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat, vconsole_fuzzy",
        "flagsRaw": 8405000,
        "hasDefensiveFlag": false,
        "index": 1416
    },
    "cl_ent_text256": {
        "description": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1418
    },
    "cl_ent_text_clear": {
        "description": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1419
    },
    "cl_ent_text_filter": {
        "description": "Set which ent_text filters you want: ",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1400
    },
    "cl_ent_text_radius": {
        "description": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)\n\t2 Arguments:   \t<Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1417
    },
    "cl_ent_text_sticky_add": {
        "description": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1420
    },
    "cl_ent_text_sticky_clear": {
        "description": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1422
    },
    "cl_ent_text_sticky_dump": {
        "description": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1423
    },
    "cl_ent_text_sticky_remove": {
        "description": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1421
    },
    "cl_ent_ungrab": {
        "description": "un-grabs all objects",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1413
    },
    "cl_ent_vcollide_wireframe": {
        "description": "Displays the interpolated vcollide wireframe pm am entity.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1433
    },
    "cl_ent_viewoffset": {
        "description": "Displays the eye position for the given entity(ies) in red.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1428
    },
    "cl_ent_visibility_traces": {
        "description": "Displays visibility traces for the given entity\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat, vconsole_fuzzy",
        "flagsRaw": 8405000,
        "hasDefensiveFlag": false,
        "index": 1430
    },
    "cl_entityreport": {
        "description": "Reports all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1529
    },
    "cl_entitysummary": {
        "description": "Summarizes (by class) all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1530
    },
    "cl_ents": {
        "description": "List client entities, sorted by spawn group",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1341
    },
    "cl_fow_viz": {
        "description": "FoW viz commands",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1117
    },
    "cl_fullupdate": {
        "description": "Force uncompressed update",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 81
    },
    "cl_groups": {
        "description": "Show status of all spawn groups.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1521
    },
    "cl_imgui_debug_entity": {
        "description": "Shows the entity browswer, focused on the entity you specify.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1335
    },
    "cl_imgui_set_selection": {
        "description": "Sets ImGui selection",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1334
    },
    "cl_imgui_set_status_text": {
        "description": "Sets ImGui header status text",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1336
    },
    "cl_in_forcebuttonstate": {
        "description": "Forces a button to be a particular state - WHEN PROCESSING USERCOMMANDS",
        "flags": "devonly, client, vconsole_fuzzy",
        "flagsRaw": 8388618,
        "hasDefensiveFlag": false,
        "index": 1345
    },
    "cl_interp": {
        "description": "Read the effective client simulation interpolation amount in terms of time.",
        "flags": "client, release",
        "flagsRaw": 524296,
        "hasDefensiveFlag": false,
        "index": 1328
    },
    "cl_npc_test_autostyle": {
        "description": "Debugging helper to try out different autostyle configurations\n\tArguments:   \t<{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}> <var name> <value>\n",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1309
    },
    "cl_panorama_script_help": {
        "description": "Display Panorama JavaScript bindings",
        "flags": "client, release",
        "flagsRaw": 524296,
        "hasDefensiveFlag": false,
        "index": 1144
    },
    "cl_panorama_script_help_2": {
        "description": "Display all registered Panorama JavaScript bindings in wiki syntax",
        "flags": "client, release",
        "flagsRaw": 524296,
        "hasDefensiveFlag": false,
        "index": 1146
    },
    "cl_panorama_typescript_declarations": {
        "description": "Display Panorama JavaScript bindings as TypeScript declarations",
        "flags": "client, release",
        "flagsRaw": 524296,
        "hasDefensiveFlag": false,
        "index": 1145
    },
    "cl_particles_dump_effects": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1398
    },
    "cl_particles_dumplist": {
        "description": "Dump all new particles, optional name substring.",
        "flags": "linked, devonly, client",
        "flagsRaw": 11,
        "hasDefensiveFlag": true,
        "index": 426
    },
    "cl_particles_dumpsimlist": {
        "description": "Dump all simulating particles, optional name substring.",
        "flags": "linked, devonly, client",
        "flagsRaw": 11,
        "hasDefensiveFlag": true,
        "index": 427
    },
    "cl_phys_create_test_character_proxy": {
        "description": "Create test character proxy",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1469
    },
    "cl_phys_dump_intersection_controller": {
        "description": "Dump intersection controller status",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1461
    },
    "cl_phys_dump_main_world": {
        "description": "Dump physics main world to file",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1458
    },
    "cl_phys_list": {
        "description": "List all physics component contents of every entity in the game;\n    -stream [1|0] : initiate|terminate streaming to physics debugger\n    -allents: include non-physical entities\n    -classes: print class names\n    -sdk    : Rubikon build\n    -world  : current state of the world\n    -world -touch: list body pairs (bodies in contact)\n    -world -save <name>: save world to a file\n    -world -mem: memory dump\n    -world -snapshots: Start/Stop dumping snapshots of the world into the current directory\n    -world -profiletraces: ProfileRecordedTraces\n    -world -agg: current aggregate data registry (loaded resources)\n",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1462
    },
    "cl_phys_record_rays": {
        "description": "Dump physics main world to file",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1459
    },
    "cl_phys_record_rays_and_world": {
        "description": "Dump traces physics main world to file",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1460
    },
    "cl_phys_sleep": {
        "description": "Put all physics in all the worlds to sleep",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1463
    },
    "cl_phys_wakeup": {
        "description": "Wake all physics objects in the Main physics up",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1464
    },
    "cl_physics_add_test": {
        "description": "add test object",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1467
    },
    "cl_physics_highlight_active": {
        "description": "Turns on the absbox for all active physics objects.\n  0 : un-highlight.\n",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1465
    },
    "cl_physics_remove_test": {
        "description": "remove test object",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1468
    },
    "cl_physics_report_active": {
        "description": "Lists all active physics objects\n  -more : extra info\n",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1466
    },
    "cl_precacheinfo": {
        "description": "Show precache info (client).",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 174
    },
    "cl_pred_track": {
        "description": "<entindex> <fieldname>:  Track changes to entity index entindex, for field fieldname.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1301
    },
    "cl_pred_track_off": {
        "description": "clear field track changes.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1302
    },
    "cl_predictioncopy_describe": {
        "description": "Describe datamap_t for entindex",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1303
    },
    "cl_predictioncopy_print": {
        "description": "Print simple description of prediction copy fields for entindex",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1304
    },
    "cl_printfps": {
        "description": "Print information from cl_showfps.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1380
    },
    "cl_prop_debug": {
        "description": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1329
    },
    "cl_querycache_stats": {
        "description": "Display status of the query cache (client only)",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1201
    },
    "cl_record_bone_setup_stats": {
        "description": "generate bone setup statistics",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1351
    },
    "cl_removedecals": {
        "description": "Remove the decals from the entity under the crosshair.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1355
    },
    "cl_report_entities": {
        "description": "Lists all entities",
        "flags": "devonly, client, cheat",
        "flagsRaw": 16394,
        "hasDefensiveFlag": false,
        "index": 1340
    },
    "cl_report_predcopy_overrides": {
        "description": "Report prediction copy overrides",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1305
    },
    "cl_report_simthinklist": {
        "description": "Lists all simulating/thinking entities",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1472
    },
    "cl_report_soundpatch": {
        "description": "reports client-side sound patch count",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1202
    },
    "cl_resetfps": {
        "description": "Reset information from cl_showfps.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1381
    },
    "cl_rr_findrules": {
        "description": "Search and list rules by substring.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1325
    },
    "cl_rr_findrules_verbose": {
        "description": "Search and list rules by substring.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1326
    },
    "cl_rr_reloadresponsesystems": {
        "description": "Reload all response system scripts.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1324
    },
    "cl_save_animgraph_recording": {
        "description": "Saves all active animgraph recordings to disk",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1443
    },
    "cl_script_add_debug_filter": {
        "description": "Add a filter to the game debug overlay",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1484
    },
    "cl_script_add_watch": {
        "description": "Add a watch to the game debug overlay",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1480
    },
    "cl_script_add_watch_pattern": {
        "description": "Add a watch to the game debug overlay",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1482
    },
    "cl_script_attach_debugger": {
        "description": "Connect the vscript VM to the script debugger",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1478
    },
    "cl_script_clear_watches": {
        "description": "Clear all watches from the game debug overlay",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1492
    },
    "cl_script_debug": {
        "description": "Toggle the in-game script debug features",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1479
    },
    "cl_script_dump_all": {
        "description": "Dump the state of the VM to the console",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1299
    },
    "cl_script_find": {
        "description": "Find a key in the VM ",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1493
    },
    "cl_script_help": {
        "description": "Output help for script functions",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1497
    },
    "cl_script_help2": {
        "description": "Output help for script functions suitable for auto-completion",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1498
    },
    "cl_script_reload": {
        "description": "Reload scripts",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1477
    },
    "cl_script_reload_code": {
        "description": "Execute a vscript file, replacing existing functions with the functions in the run script",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1495
    },
    "cl_script_reload_entity_code": {
        "description": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1496
    },
    "cl_script_remove_debug_filter": {
        "description": "Remove a filter from the game debug overlay",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1485
    },
    "cl_script_remove_watch": {
        "description": "Remove a watch from the game debug overlay",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1481
    },
    "cl_script_remove_watch_pattern": {
        "description": "Remove a watch from the game debug overlay",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1483
    },
    "cl_script_resurrect_unreachable": {
        "description": "Use the garbage collector to track down reference cycles",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1494
    },
    "cl_script_trace_disable": {
        "description": "Turn off a particular trace output by file or function name",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1487
    },
    "cl_script_trace_disable_all": {
        "description": "Turn off all trace output",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1491
    },
    "cl_script_trace_disable_key": {
        "description": "Turn off a particular trace output by table/instance",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1489
    },
    "cl_script_trace_enable": {
        "description": "Turn on a particular trace output by file or function name",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1486
    },
    "cl_script_trace_enable_all": {
        "description": "Turn on all trace output",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1490
    },
    "cl_script_trace_enable_key": {
        "description": "Turn on a particular trace output by table/instance",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1488
    },
    "cl_showents": {
        "description": "Dump entity list to console.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1379
    },
    "cl_soundscape_flush": {
        "description": "Flushes the client side soundscapes",
        "flags": "client, cheat, server_can_execute",
        "flagsRaw": 16793608,
        "hasDefensiveFlag": false,
        "index": 1370
    },
    "cl_soundscape_printdebuginfo": {
        "description": "print soundscapes",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1373
    },
    "cl_spewserializers": {
        "description": "Spew serializers",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 176
    },
    "cl_spewworldgroups": {
        "description": "Spew world groups (client)",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 175
    },
    "cl_ss_origin": {
        "description": "print origin in script format",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1374
    },
    "cl_test_list_entities": {
        "description": "test-list entities",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1471
    },
    "cl_ticktiming": {
        "description": "{print|<interval>} [summary|detail]  Print timing stats now, or set report interval",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 173
    },
    "cl_tree_sway_dir": {
        "description": "sets tree sway wind direction and strength",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1397
    },
    "cl_updatevisibility": {
        "description": "Updates visibility bits.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1352
    },
    "cl_wateroverride": {
        "description": "Specify a material to override the water material.",
        "flags": "devonly, client, cheat",
        "flagsRaw": 16394,
        "hasDefensiveFlag": false,
        "index": 1263
    },
    "claim_event_action": {
        "description": "Claim an event action",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 901
    },
    "claim_event_level_rewards": {
        "description": "Claim rewards for an event level",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 902
    },
    "clear": {
        "description": "Clear console output.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 40
    },
    "clearall": {
        "description": "Clear console output from all views.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 41
    },
    "cli_ent_attachments": {
        "description": "Displays the interpolated attachment points on an entity.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1452
    },
    "cli_ent_hitbox": {
        "description": "Displays the skeleton for the given entity(ies).\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1451
    },
    "cli_ent_pivot": {
        "description": "Displays the interpolated pivot for the given entity(ies).\n\t(y=up=green, z=forward=blue, x=left=red). \n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1449
    },
    "cli_ent_skeleton": {
        "description": "Displays the skeleton for the given entity(ies).\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1450
    },
    "cli_ent_vcollide_wireframe": {
        "description": "Displays the interpolated vcollide wireframe pm am entity.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1453
    },
    "client_metrics_upload_immediate": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1300
    },
    "cmd": {
        "description": "Forward command to server.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 85
    },
    "col_viz": {
        "description": "Collision visualizer commands",
        "flags": "devonly, game, replicated",
        "flagsRaw": 8198,
        "hasDefensiveFlag": true,
        "index": 465
    },
    "collect_entity_model_name": {
        "description": "Collect model names of the entities you're pointing at",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 620
    },
    "commandtool_exec": {
        "description": "Runs a command from the command tool",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 1514
    },
    "commentary_cvarsnotchanging": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 595
    },
    "commentary_finishnode": {
        "description": "",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 596
    },
    "condump": {
        "description": "dump the text currently in the console to condumpXX.log",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 43
    },
    "connect": {
        "description": "Connect to a remote server.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 74
    },
    "connect_hltv": {
        "description": "Connect to a remote HLTV server.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 75
    },
    "console_test": {
        "description": "Output text to test console",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 130
    },
    "consoletool": {
        "description": "Open a VConsole subtool.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 42
    },
    "convert_steamid": {
        "description": "Convert SteamID into multiple formats",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1378
    },
    "cpuinfo": {
        "description": "Print CPU configuration information",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 206
    },
    "crash": {
        "description": "Crash the client. Optional parameter -- type of crash:\n 0: read from NULL\n 1: write to NULL\n 2: force an Assert\n 3: infinite loop\n 4: stack buffer overrun\n 5: multiple asserts across multiple threads",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 121
    },
    "crash_error": {
        "description": "Cause the engine to crash by Plat_FatalError on main thread (Debug!!)",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 124
    },
    "crash_error_job": {
        "description": "Cause the engine to crash by Plat_FatalError on job thread (Debug!!)",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 126
    },
    "crash_error_thread": {
        "description": "Cause the engine to crash by Plat_FatalError on non-main thread (Debug!!)",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 125
    },
    "crash_job": {
        "description": "Cause the engine to crash in a job thread (Debug!!)",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 122
    },
    "crash_thread": {
        "description": "Cause the engine to crash in a brand new non-main thread (Debug!!)",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 123
    },
    "create_flashlight": {
        "description": "",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 600
    },
    "creditsdone": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 603
    },
    "custom_game_vote_popup": {
        "description": "Test vote popup for specified custom game ID",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1048
    },
    "customgamesetup_auto_assign_players": {
        "description": "Automatically assign all curently unassigned player to teams.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 646
    },
    "customgamesetup_enable_auto_launch": {
        "description": "Enable or disable automatically launching the game when all players are assigned to a team.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 651
    },
    "customgamesetup_lock_team_selection": {
        "description": "Lock or unlock the team selection, when locked players cannot change teams.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 650
    },
    "customgamesetup_select_team": {
        "description": "Player selecting a team during custom game setup.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 648
    },
    "customgamesetup_set_auto_launch_delay": {
        "description": "Set the amount of time in seconds that will be set as the remaining time when all players are assigned to a team.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 652
    },
    "customgamesetup_set_remaining_time": {
        "description": "Set the number of seconds remaining before the game starts.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 649
    },
    "customgamesetup_shuffle_players": {
        "description": "Shuffle the team assignments of all players currently assigned to a team.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 647
    },
    "cvarlist": {
        "description": "Show the list of convars/concommands.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 7
    },
    "cyclevar": {
        "description": "Cycle through specified convar values.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 50
    },
    "dbghist_addline": {
        "description": "Add a line to the debug history. Format: <category id> <line>",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 598
    },
    "dbghist_dump": {
        "description": "Dump the debug history to the console. Format: <category id>\n    Categories:\n     0: Entity I/O\n     1: AI Decisions\n     2: Scene Print\n     3: Alyx Blind\n     4: Log of damage done to player\n\t 5: Player Teleport\n\t 6: Blind Zombie Sounds\n\t 7: Player Continuous\n",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 599
    },
    "debugoverlay_cycle_domain": {
        "description": "Toggles visibility of the debug overlay system.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 715
    },
    "debugoverlay_cycle_state": {
        "description": "Toggles visibility of the debug overlay system.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 716
    },
    "debugoverlay_hide_imgui": {
        "description": "Hides the overlay.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 717
    },
    "debugoverlay_toggle": {
        "description": "Toggles visibility of the debug overlay system.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 714
    },
    "demo_goto": {
        "description": "Skips to location in demo.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 151
    },
    "demo_gotomark": {
        "description": "Skips the current demo playback to the marked tick",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 154
    },
    "demo_gototick": {
        "description": "Skips to a tick in demo.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 152
    },
    "demo_info": {
        "description": "Print information about currently playing demo.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 155
    },
    "demo_marktick": {
        "description": "Marks the current demo playback tick for later use",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 153
    },
    "demo_pause": {
        "description": "Pauses demo playback.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 148
    },
    "demo_resume": {
        "description": "Resumes demo playback.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 149
    },
    "demo_timescale": {
        "description": "Sets demo replay speed.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 156
    },
    "demo_togglepause": {
        "description": "Toggles demo playback.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 150
    },
    "demo_writemetafile": {
        "description": "save current meta file demo_<version>.meta file for use in demo upconversion.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 90
    },
    "demolist": {
        "description": "Print demo sequence list.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 159
    },
    "dev_auto_draft_test": {
        "description": "runs pick test on multiple players",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 675
    },
    "dev_send_gc_message": {
        "description": "<msgid> Send a blank body message with a given ID to gc for routing tests",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 898
    },
    "dev_send_gc_message_server": {
        "description": "<msgid> Send a blank body message with a given ID to gc for routing tests",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 521
    },
    "dev_show_event_dungeon_leaderboards": {
        "description": "Show the Dungeon event leaderboards",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1052
    },
    "dev_simulate_gcdown": {
        "description": "<state> Turn on/off simulated GC communications failure (GC is down in a way that we know it is down)",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 899
    },
    "differences": {
        "description": "Show all convars which are not at their default values (optional restricted to specific flags).",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 6
    },
    "disable_priority_boost": {
        "description": "Disable focus based priority boost",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 132
    },
    "disconnect": {
        "description": "Disconnect from server",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 79
    },
    "dlight_debug": {
        "description": "Creates a dlight in front of the player",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1354
    },
    "dota_aa_test_reduce_playtime_remaining": {
        "description": "Limit available remaining playtime.  Requires -antiaddiction_test.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1171
    },
    "dota_ability_autocast": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 967
    },
    "dota_ability_dump_refcounts": {
        "description": "Dumps the modifier refcounts of all hero abilities",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 634
    },
    "dota_ability_execute": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 964
    },
    "dota_ability_learn_mode": {
        "description": "Enter the mode where ability points can be spent",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1230
    },
    "dota_ability_quickcast": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 968
    },
    "dota_add_map_override": {
        "description": "Specify a map override to test, then use the map command to load the map with the override",
        "flags": "client, hidden, cheat",
        "flagsRaw": 16408,
        "hasDefensiveFlag": false,
        "index": 1235
    },
    "dota_animation_run": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 504
    },
    "dota_animation_run_ancient": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 505
    },
    "dota_apm": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1267
    },
    "dota_battle_report_print_match_history": {
        "description": "[account id] [timestamp] [duration] Print battle report match history",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1284
    },
    "dota_battle_report_show_new_popup": {
        "description": "[timestamp] [duration] Show the battle report popup",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1138
    },
    "dota_battle_report_show_page": {
        "description": "[account id] - shows the battle report page for the given account id.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1110
    },
    "dota_battle_report_show_popup": {
        "description": "[account id] [timestamp] [duration] Show the battle report popup",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1136
    },
    "dota_bot_avg_fps": {
        "description": "Reports the average fps for this dota game",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 503
    },
    "dota_bot_debug_clear": {
        "description": "Disables all bot debugging.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 491
    },
    "dota_bot_debug_clear_all": {
        "description": "Disables all bot debugging.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 493
    },
    "dota_bot_debug_grid_cycle": {
        "description": "Cycles through grid modes.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 492
    },
    "dota_bot_debug_minimap_cycle": {
        "description": "Cycles through different minimap debug modes.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 494
    },
    "dota_bot_disconnect_player": {
        "description": "Disconnects the player owner of all bots",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 500
    },
    "dota_bot_dump_state": {
        "description": "Dumps the entire bot state to the client",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 501
    },
    "dota_bot_give_gold": {
        "description": "Gives all bots the specified amount of gold.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 497
    },
    "dota_bot_give_item": {
        "description": "Creates an item for all bots.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 495
    },
    "dota_bot_give_level": {
        "description": "Gives all bots the specified number of levels.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 496
    },
    "dota_bot_populate": {
        "description": "Populates the remaining slots with bots",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 486
    },
    "dota_bot_populate_seeded": {
        "description": "Populates the remaining slots with hard bots given a random seed",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 487
    },
    "dota_bot_potential_debug": {
        "description": "Displays potential locations for this bot.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 488
    },
    "dota_bot_reload_scripts": {
        "description": "Reloads all the bot scripts",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 502
    },
    "dota_bot_select_debug": {
        "description": "Displays general bot debugging information.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 489
    },
    "dota_bot_select_debug_attack": {
        "description": "Displays debugging info on potential attack targets.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 490
    },
    "dota_bot_set_difficulty": {
        "description": "Sets all bots to a particular difficulty (0 = easy, 1 = medium, 2 = hard, 3 = unfair.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 498
    },
    "dota_bot_validate_hero_builds": {
        "description": "Check that all default bot hero builds are valid.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 484
    },
    "dota_bp_frontpage_takeover_test_live_matches": {
        "description": "Setup the frontpage takeover with some match data things.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1194
    },
    "dota_bp_override_action": {
        "description": "<event action> [action score] - Calls dota_event_override_action for the current event",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 918
    },
    "dota_bp_override_clear": {
        "description": "Calls dota_event_override_clear for the current event",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 919
    },
    "dota_bp_override_level": {
        "description": "[level] - Calls dota_event_override_level for the current event",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 915
    },
    "dota_bp_override_owned": {
        "description": "[owned] - Calls dota_event_override_owned for the current event",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 917
    },
    "dota_bp_override_points": {
        "description": "[points] - Calls dota_event_override_points for the current event",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 914
    },
    "dota_bp_override_premium_points": {
        "description": "[premium points] - Calls dota_event_override_premium_points for the current event",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 916
    },
    "dota_bp_override_takeover": {
        "description": "[takeover_active] - Toggle the takeover for BP2022 events.  0 off, 1 on",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1189
    },
    "dota_bracket_predictions_dump": {
        "description": "<league id>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1021
    },
    "dota_broadcaster_dismiss_all_stats": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 941
    },
    "dota_call_gg": {
        "description": "",
        "flags": "game, hidden",
        "flagsRaw": 33554452,
        "hasDefensiveFlag": false,
        "index": 669
    },
    "dota_camera_center": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1252
    },
    "dota_camera_center_on_entity": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1253
    },
    "dota_camera_focus_player": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1275
    },
    "dota_camera_get_lookatpos": {
        "description": "Prints the main camera's look-at position.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1285
    },
    "dota_camera_get_pos": {
        "description": "Prints the camera position. If you are trying to set DOTA's main camera position, you probably want to use dota_camera_get_lookatpos and dota_camera_set_lookatpos.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1288
    },
    "dota_camera_lerp_position": {
        "description": "Blend the camera lookat position.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1255
    },
    "dota_camera_saved_position": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1238
    },
    "dota_camera_set_lookatpos": {
        "description": "Sets the main camera's look-at position from (x,y) coordinates.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1286
    },
    "dota_camera_set_position": {
        "description": "Set the camera lookat position.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1254
    },
    "dota_cancel_GG": {
        "description": "Cancel GG call",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 677
    },
    "dota_candy_shop_generate_recipes": {
        "description": "Generate 4 recipes.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1292
    },
    "dota_candy_shop_print_recipes": {
        "description": "Generate all recipes.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1291
    },
    "dota_chat_wheel_print_hero_summary": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1181
    },
    "dota_chat_wheel_reload": {
        "description": "Reload the chat wheel definition files",
        "flags": "linked, devonly, game, client",
        "flagsRaw": 15,
        "hasDefensiveFlag": false,
        "index": 640
    },
    "dota_chat_wheel_standardize": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1182
    },
    "dota_check_localization": {
        "description": "Look over unit and ability data to verify that all the expected localization strings are present",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1312
    },
    "dota_clear_popup_queue": {
        "description": "dota_clear_popup_queue",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1059
    },
    "dota_clear_viewed_hero_updates": {
        "description": "Clears list of viewed updates",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1092
    },
    "dota_collectors_cache_show_popup": {
        "description": "[account id] Show the collector's cache popup",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1137
    },
    "dota_combatlog_scan": {
        "description": "Scans for fights",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1107
    },
    "dota_combatlog_size": {
        "description": "Calculates the total allocations for a combatlog",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1108
    },
    "dota_combatlog_size_server": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 645
    },
    "dota_combatlog_summary": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 643
    },
    "dota_combatlog_update": {
        "description": "Send combat log to a client",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 644
    },
    "dota_combatlog_write_test": {
        "description": "Writes combatlog to disk if you have dota_combatlog_file set",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1109
    },
    "dota_commander_report": {
        "description": "Prints a snapshot of the commander's state",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 485
    },
    "dota_consume_event_point_items": {
        "description": "Consumes all event point items in your inventory in one GC message",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 900
    },
    "dota_contextual_tips_queue_custom_tip": {
        "description": "Queues a specific custom client tip to be displayed",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 977
    },
    "dota_contextual_tips_queue_tip_id": {
        "description": "Queues a specific tip ID to be displayed",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 976
    },
    "dota_contextual_tips_reload": {
        "description": "Reload the contextual tips definition file",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 664
    },
    "dota_courier_burst": {
        "description": "Activate speed burst on courier",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 981
    },
    "dota_courier_deliver": {
        "description": "Order courier to deliver my items",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 980
    },
    "dota_courier_shield": {
        "description": "Activate speed shield on courier",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 982
    },
    "dota_create_ability": {
        "description": "Create an ability for the player's hero at the first unused ability index",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 635
    },
    "dota_create_bot_wearing_item": {
        "description": "Creates a bot wearing a given item def index.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 702
    },
    "dota_create_bot_wearing_set": {
        "description": "Creates a bot wearing a given set of items from a bundle object.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 703
    },
    "dota_create_courier": {
        "description": "Creates a courier.  Usage: dota_create_courier <r|d> <econ id> <style index> [flying]",
        "flags": "devonly, game",
        "flagsRaw": 33554438,
        "hasDefensiveFlag": false,
        "index": 693
    },
    "dota_create_fake_clients": {
        "description": "Populates the remaining slots with fake clients",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 680
    },
    "dota_create_item": {
        "description": "Creates an item for the selected unit",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 464
    },
    "dota_create_neutral_hero": {
        "description": "Creates an unit",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 696
    },
    "dota_create_unit": {
        "description": "Creates an unit",
        "flags": "game, vconsole_fuzzy",
        "flagsRaw": 41943044,
        "hasDefensiveFlag": false,
        "index": 694
    },
    "dota_create_ward": {
        "description": "Creates a ward.  Usage: dota_create_ward <o(bserver)|s(entry)> <r(adiant)|d(ire)> <econ id> <style index>",
        "flags": "devonly, game",
        "flagsRaw": 33554438,
        "hasDefensiveFlag": false,
        "index": 692
    },
    "dota_crownfall_candy_shop_show_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1002
    },
    "dota_crownfall_encounter_fishing": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1041
    },
    "dota_crownfall_encounter_flappy_skywrath": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1042
    },
    "dota_crownfall_encounter_token_treasure": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1043
    },
    "dota_crownfall_overworld_map_test_comet": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1191
    },
    "dota_crownfall_overworld_map_test_drag_zoom": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1192
    },
    "dota_crownfall_reset_intro": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1004
    },
    "dota_crownfall_show_tokens_received": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1044
    },
    "dota_crownfall_visual_novel_dialogue": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1045
    },
    "dota_custom_ui_debug_panel": {
        "description": "Usage: dota_custom_ui_debug_panel <panel_type_index>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1188
    },
    "dota_cycle_prev_selected": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1242
    },
    "dota_cycle_selected": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1241
    },
    "dota_dashboard_force_background_refresh": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1190
    },
    "dota_daynightcycle_toggle": {
        "description": "Toggle the day-night cycle.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 679
    },
    "dota_db_frontpage_takeover_set_stream": {
        "description": "<control_num> <stream_name> [t1_wins] [t2_wins] Overrides an entry in the list to have specific match data.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1195
    },
    "dota_delete_all_player_cards": {
        "description": "<event id> - Delete all player cards for an event",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 921
    },
    "dota_dev": {
        "description": "DotA dev commands",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 700
    },
    "dota_dpc_reset_spoilers": {
        "description": "clear dpc spoiler data",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1088
    },
    "dota_dump_behavior": {
        "description": "Dump Behavior score info.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1098
    },
    "dota_dump_bot_state": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1317
    },
    "dota_dump_buff_message_count": {
        "description": "dota_dump_buff_message_count",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 657
    },
    "dota_dump_client_asset_modifiers": {
        "description": "Dump asset modifiers on the client.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1308
    },
    "dota_dump_coach_state": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1274
    },
    "dota_dump_connection_stats": {
        "description": "Dump current connection stats",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 517
    },
    "dota_dump_creep_stats": {
        "description": "Displays stats on creep denies/lasthits/kills.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 507
    },
    "dota_dump_game_items": {
        "description": "Print a list of all game items with their item ids in CSV format.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 666
    },
    "dota_dump_hero_history": {
        "description": "Dump items and abilities that a hero has bought/leveled",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 508
    },
    "dota_dump_inventory": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1320
    },
    "dota_dump_scene_panel_state": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 959
    },
    "dota_dump_server_asset_modifiers": {
        "description": "Dump asset modifiers on the server.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 662
    },
    "dota_dump_server_inventory": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 686
    },
    "dota_dump_units": {
        "description": "Print a list of all game units.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 667
    },
    "dota_dynamic_weather_toggle": {
        "description": "Toggle dynamic weather on/off",
        "flags": "devonly, client",
        "flagsRaw": 33554442,
        "hasDefensiveFlag": false,
        "index": 1262
    },
    "dota_event_override_action": {
        "description": "<event id> <action id> [action score] - Set a clientside override of an event action. -1 to remove the override.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 912
    },
    "dota_event_override_clear": {
        "description": "<event id> - Clear any clientside overrides for an event",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 913
    },
    "dota_event_override_level": {
        "description": "<event id> [level] - Set a clientside override of the level value for an event. -1 to remove the override.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 909
    },
    "dota_event_override_owned": {
        "description": "<event id> [owned] - Set a clientside override of whether an event is owned. -1 for not owned, 1 for owned, 0 for no override.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 911
    },
    "dota_event_override_points": {
        "description": "<event id> [points] - Set a clientside override of the point value for an event",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 908
    },
    "dota_event_override_premium_points": {
        "description": "<event id> [premium points] - Set a clientside override of the premium points for an event. -1 to remove the override.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 910
    },
    "dota_event_set_active_seasonid": {
        "description": "Sets the current season id for an event (zero will use current timestamp)",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 920
    },
    "dota_export_steam_inventory_layout": {
        "description": "Save the inventory layout to the Steam servers.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 892
    },
    "dota_export_steam_inventory_layout_flow": {
        "description": "Save the inventory layout to the Steam servers.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 893
    },
    "dota_fake_accept_match": {
        "description": "",
        "flags": "devonly, client, hidden",
        "flagsRaw": 26,
        "hasDefensiveFlag": true,
        "index": 1039
    },
    "dota_fake_charge_cost_item_charges_in_flight": {
        "description": "<itemdef> <quantity> - overrides the UI to display as if you have the given value of charges for an item def in flight. Set to -1 to disable.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1097
    },
    "dota_fake_limited_purchase_quantity": {
        "description": "<itemdef> <quantity> - overrides the UI to display as if you have purchased the given value of an item def. Set to -1 to disable.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1096
    },
    "dota_fake_salute_player": {
        "description": "<source player id> <target player id> <event id> - fakes a client sending a salute to another player",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 670
    },
    "dota_fake_update_play": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1037
    },
    "dota_find_missing_hero_sets": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1075
    },
    "dota_fow_disable": {
        "description": "Disable fog of war completely.",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 455
    },
    "dota_free_ids": {
        "description": "Shows next free ID for items, abilities and heroes.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1313
    },
    "dota_game_account_client_debug": {
        "description": "Prints game account client info",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1175
    },
    "dota_game_account_plus_debug": {
        "description": "Prints game account plus info",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1176
    },
    "dota_gamemode_ability_draft_set_draft_hero_and_team": {
        "description": "Manually select which heroes will be assigned during Ability Draft lobby game. Usage: dota_gamemode_ability_draft_set_draft_hero_and_team <hero> <team:radiant/dire/extra>",
        "flags": "client, cheat, vconsole_fuzzy",
        "flagsRaw": 8405000,
        "hasDefensiveFlag": false,
        "index": 1056
    },
    "dota_gamemode_ability_draft_set_draft_hero_and_team_clear": {
        "description": "dota_gamemode_ability_draft_set_draft_hero_and_team : CLEAR ",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1057
    },
    "dota_gamestate": {
        "description": "Print current game state",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 682
    },
    "dota_generate_potential_purchase_item_list": {
        "description": "Generates a list of items that should be considered for purchase.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 896
    },
    "dota_get_rp": {
        "description": "Retrieves the rich presence of the user (leave blank for local or specify user with SteamID.Render() format).",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1129
    },
    "dota_get_team_info": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 931
    },
    "dota_glyph": {
        "description": "trigger the Glyph of Fortification for your team",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 986
    },
    "dota_gold_summary": {
        "description": "Print out gold info",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1283
    },
    "dota_grant_consumable_charges": {
        "description": "Grants a player a change in consumables",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 471
    },
    "dota_grant_event_action": {
        "description": "Grant all event ",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 904
    },
    "dota_grant_event_points": {
        "description": "Reset all state on your account relating to the given event id",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 903
    },
    "dota_gridnav_perf_test": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 458
    },
    "dota_guild_level_formula_test": {
        "description": "Test the formulas for guild levels",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1071
    },
    "dota_guild_show_create_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1024
    },
    "dota_guild_show_invite_popup": {
        "description": "<guild id> Show the popup pretending you received a guild invite from yourself to a specific guild",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 950
    },
    "dota_guild_show_welcome_popup": {
        "description": "<guild id> Show the popup pretending you received a guild Welcome from yourself to a specific guild",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 951
    },
    "dota_help_tips_reset": {
        "description": "Removes records of any already dismissed help tips.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1073
    },
    "dota_help_tips_reset_intro": {
        "description": "Removes records of intro tips.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1072
    },
    "dota_hero_adjectives_dump": {
        "description": "[adjective] [value] Dumps out which heroes have which adjectives",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1321
    },
    "dota_hide_fight_recap": {
        "description": "Hide the fight recap.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 984
    },
    "dota_hide_trees": {
        "description": "Mark all the trees on the map as hidden.",
        "flags": "devonly, client, cheat",
        "flagsRaw": 16394,
        "hasDefensiveFlag": false,
        "index": 1279
    },
    "dota_hold": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1259
    },
    "dota_hud_debug_neutral_item_picker": {
        "description": "<item tier> - Shows the neutral item picker with items from the given tier.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 997
    },
    "dota_hud_fake_accept_match": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1082
    },
    "dota_hud_onstage_reload": {
        "description": "Recreates HUD Onstage panel",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1085
    },
    "dota_hud_reload": {
        "description": "Recreates HUD panel",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1079
    },
    "dota_hud_wager_spoof": {
        "description": "Spoof a wager for a specific player",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 688
    },
    "dota_import_steam_inventory_layout": {
        "description": "Load the inventory layout from the Steam servers.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 895
    },
    "dota_invite_debug": {
        "description": "Prints local invite objects",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1174
    },
    "dota_item_autocast": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 989
    },
    "dota_item_execute": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 987
    },
    "dota_item_quick_cast": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 988
    },
    "dota_kill_all_bots": {
        "description": "Destroys all bots",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 499
    },
    "dota_kill_buildings": {
        "description": "Kill buildings.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 513
    },
    "dota_kill_creeps": {
        "description": "Kill creeps.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 512
    },
    "dota_kill_unit_by_name": {
        "description": "Kill a specific unit by unit name.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 514
    },
    "dota_lastmatch_cycle": {
        "description": "",
        "flags": "client, hidden",
        "flagsRaw": 33554456,
        "hasDefensiveFlag": false,
        "index": 1196
    },
    "dota_launch_custom_game": {
        "description": "Launch a custom game",
        "flags": "client, release, vconsole_fuzzy, vconsole_set_focus",
        "flagsRaw": 143130632,
        "hasDefensiveFlag": false,
        "index": 1168
    },
    "dota_launch_event_game": {
        "description": "Launch an event game",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1169
    },
    "dota_league_refresh_localization": {
        "description": "Refreshes the english localization file with all the latest league strings",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1087
    },
    "dota_league_shared_dump": {
        "description": "Dumps the shared league data to the console",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1123
    },
    "dota_learn_stats": {
        "description": "Show talents popup",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 886
    },
    "dota_leaver_status": {
        "description": "List leaver status of players",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 469
    },
    "dota_load_all_hero_sounds": {
        "description": "Loads all hero sound entries, for diagnostics",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1322
    },
    "dota_load_demo_mode_scenario": {
        "description": "[input_file]",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 473
    },
    "dota_localization_create": {
        "description": "<type> <english file path> - creates a new localization file at the given path including all of the language variants.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1125
    },
    "dota_localization_rearrange": {
        "description": "<english file> [language]",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1124
    },
    "dota_localize_hero_chat_wheel": {
        "description": "Automatically localize hero chat wheel messages in chat_wheel_staging.txt using the sound subtitles files.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1186
    },
    "dota_minimap_create": {
        "description": "Does a bunch of work to create a minimap",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1319
    },
    "dota_modifier_dump": {
        "description": "Dump all modifiers on all entities.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 674
    },
    "dota_modifier_test": {
        "description": "Creates a test modifier on unit: dota_modifier_test <entityindex> <modifiername> <duration>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 660
    },
    "dota_muerta_release_event_simulate_minigame_score": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 995
    },
    "dota_onstage_toggle_cursor": {
        "description": "Toggles the cursor on the onstage panel, helpful for pano debugging",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1086
    },
    "dota_overworld_trade_tokens": {
        "description": "Usage: dota_overworld_trade_tokens <overworld_id> <encounter_id> <recipe> <token_id request> <token_id offer1> <token_id offer2> <token_id offer3>[ token_id offer4 ]",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1126
    },
    "dota_party_debug": {
        "description": "Prints local party objects",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1173
    },
    "dota_path_repro": {
        "description": "Repro case for a pathing bug",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 466
    },
    "dota_pause": {
        "description": "Send a game pause request.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1282
    },
    "dota_pick_hero": {
        "description": "Pick a hero for <player-id> <hero> [<random-seed>]",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 681
    },
    "dota_ping": {
        "description": "Print out latency information",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 697
    },
    "dota_player_status": {
        "description": "Gives a status update on all players.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 683
    },
    "dota_plus_generate_hero_event_actions": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1093
    },
    "dota_portrait_reload": {
        "description": "Reload portrait data",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1232
    },
    "dota_portrait_reload_file": {
        "description": "Reloads portrait data.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1314
    },
    "dota_post_game": {
        "description": "Show post game lobby with a historical matchid",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1030
    },
    "dota_post_game_lobby": {
        "description": "Show post game lobby with current lobby",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1031
    },
    "dota_post_game_progress_cavern_move_to": {
        "description": "Test cavern post-game",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1193
    },
    "dota_post_game_progress_wraith_king_move_to": {
        "description": "Test wraith king arcana post-game",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1066
    },
    "dota_preview_hero": {
        "description": "Pick hero for previewing",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 459
    },
    "dota_preview_sticker": {
        "description": "<item_def_index> opens the preview page for a specified item def",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1034
    },
    "dota_purchase_quickbuy": {
        "description": "Attempt to purchase an item out of the quickbuy. Priority is left to right, skips over items not purchasable due to secret shop",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1127
    },
    "dota_purchase_stickybuy": {
        "description": "Attempt to purchase an item out of the sticky slot. Skips over items not purchasable due to secret shop",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1128
    },
    "dota_radar": {
        "description": "Activate radar mode",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 855
    },
    "dota_recent_event": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1247
    },
    "dota_record_hero": {
        "description": "Pick hero for recording",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 460
    },
    "dota_record_hero_next": {
        "description": "Switch to next hero",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 461
    },
    "dota_record_hero_prev": {
        "description": "Switch to prev hero",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 462
    },
    "dota_record_webm": {
        "description": "Record a hero for a transparent webm movie.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1234
    },
    "dota_redeem_item_code": {
        "description": "Redeem a legacy Dota item code.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1069
    },
    "dota_ref_winner_dire": {
        "description": "Causes the dire team to win",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 699
    },
    "dota_ref_winner_radiant": {
        "description": "Causes the radiant team to win",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 698
    },
    "dota_reload_podseats": {
        "description": "Reload ti_podseats.txt data",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1273
    },
    "dota_reload_text_chat_macros": {
        "description": "Reload chat macros",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1180
    },
    "dota_remove_ability": {
        "description": "Remove an ability from the player's hero. If no index is specified, remove all abilities except talents and stats.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 636
    },
    "dota_remove_map_override": {
        "description": "Remove a test map override",
        "flags": "client, hidden, cheat",
        "flagsRaw": 16408,
        "hasDefensiveFlag": false,
        "index": 1236
    },
    "dota_reset_event_action": {
        "description": "<event id> <start action id> [remove audit]",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 906
    },
    "dota_reset_event_action_range": {
        "description": "<event id> <start action id> <end action id> [remove audit]",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 907
    },
    "dota_reset_event_state": {
        "description": "Reset all state on your account relating to the given event id",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 905
    },
    "dota_reset_muerta_ofrenda_state": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1029
    },
    "dota_reset_violators": {
        "description": "Resets the state of all violators.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 962
    },
    "dota_respawn_roshan": {
        "description": "Respawn Roshan",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 656
    },
    "dota_rubick_arcana_reload": {
        "description": "Reload the rubick arcana descriptor file",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 472
    },
    "dota_save_scenario": {
        "description": "[output_file] [-binary] [-nopretty] save scenario of the game currently being spectated",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1131
    },
    "dota_scale_unit": {
        "description": "Scales the unit to the target multiplier",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1237
    },
    "dota_script_function_help": {
        "description": "Get help on registered script API functions and tables.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 687
    },
    "dota_search_econ_item_defs": {
        "description": "search econ items",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1111
    },
    "dota_select_all": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1246
    },
    "dota_select_all_others": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1245
    },
    "dota_select_ally": {
        "description": "selects an ally",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1244
    },
    "dota_select_courier": {
        "description": "Select a courier, or snap camera to courier if already selected",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 978
    },
    "dota_select_scout": {
        "description": "Select a scout, or snap camera to courier if already selected",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 979
    },
    "dota_server_lobby_debug": {
        "description": "Prints server lobby object",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 515
    },
    "dota_server_pause": {
        "description": "Tells the server to pause the game",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 671
    },
    "dota_set_bp_gift_level": {
        "description": "Set the number of gifts set to this account. Argument: [0-5], -1 to turn off",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1011
    },
    "dota_set_time": {
        "description": "",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 678
    },
    "dota_show_accept_coaching_session_popup": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 940
    },
    "dota_show_battle_pass_purchase_page_fall2021": {
        "description": "Show page allowing purchase of the battle pass. Argument: [gift]",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1006
    },
    "dota_show_battle_pass_purchase_page_international2022": {
        "description": "Show page allowing purchase of the battle pass. Argument: [gift]",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1018
    },
    "dota_show_battle_pass_purchase_page_spring2021": {
        "description": "Show page allowing purchase of the battle pass. Argument: [gift]",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1020
    },
    "dota_show_battle_pass_purchase_page_ti10": {
        "description": "Show page allowing purchase of the battle pass. Argument: [gift]",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1010
    },
    "dota_show_battle_pass_purchase_page_ti9": {
        "description": "Show page allowing purchase of the battle pass. Argument: [gift]",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1008
    },
    "dota_show_chat_wheel_messages_unlocked_popup": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1046
    },
    "dota_show_coach_eligiblity_popup": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1187
    },
    "dota_show_combatlog": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1105
    },
    "dota_show_crownfall_collectors_cache_vote_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1003
    },
    "dota_show_data_driven_camera": {
        "description": "<camera_file>",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1290
    },
    "dota_show_debug_popup": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1049
    },
    "dota_show_diretide_2020_cosmetics_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1023
    },
    "dota_show_econ_item_picker": {
        "description": "Show the econ item picker popup for a specific hero ID.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1051
    },
    "dota_show_event_reward_toast": {
        "description": "<event id> <level> - shows the toast as if you had just claimed the level",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1139
    },
    "dota_show_fall2021_collectors_cache_vote_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1005
    },
    "dota_show_fight_recap": {
        "description": "Show the most recent fight recap.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 983
    },
    "dota_show_gift_restrictions_popup": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1053
    },
    "dota_show_hero_compare_page": {
        "description": "Shows a page with two heroes side by side.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1025
    },
    "dota_show_initial_skill_popup": {
        "description": "Show the initial skill popup",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1054
    },
    "dota_show_international2022_collectors_cache_vote_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1015
    },
    "dota_show_invalid_role_selection_popup": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1055
    },
    "dota_show_item_reward_toast": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1140
    },
    "dota_show_killgraph": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 990
    },
    "dota_show_purchase_team_fan_content_popup": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 956
    },
    "dota_show_rank_calibration_popup": {
        "description": "Show the rank calibration popup",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1060
    },
    "dota_show_rate_coaching_session_popup": {
        "description": "[is coach] Shows the rate coaching session popup with fake data as a student or coach.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 957
    },
    "dota_show_set_portrait_generator": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1061
    },
    "dota_show_sideshop": {
        "description": "Show Sideshop",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1012
    },
    "dota_show_splash_ads": {
        "description": "Show splash ads",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 927
    },
    "dota_show_teams_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1036
    },
    "dota_show_test_item_def_page": {
        "description": "<item def> - show the page for testing a new item definition",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1028
    },
    "dota_show_test_item_set_page": {
        "description": "<set name> - show the page for testing a new item set",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1027
    },
    "dota_show_ti10_collectors_cache_vote_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1009
    },
    "dota_show_ti9_collectors_cache_vote_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1007
    },
    "dota_show_trees": {
        "description": "Mark all of the trees on the map as visible.",
        "flags": "devonly, client, cheat",
        "flagsRaw": 16394,
        "hasDefensiveFlag": false,
        "index": 1280
    },
    "dota_showcase_admin_moderation": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1032
    },
    "dota_showcase_admin_review_reports": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1033
    },
    "dota_showcase_show_report_popup": {
        "description": "<account id> <showcase type> - show the report dialog for a given showcase",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1062
    },
    "dota_sort_steam_inventory": {
        "description": "Sort the steam inventory layout.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 894
    },
    "dota_spawn_creeps": {
        "description": "Force spawn of all lane creeps.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 511
    },
    "dota_spawn_creeps_mid": {
        "description": "Force spawn of all mid lane creeps.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 510
    },
    "dota_spawn_neutrals": {
        "description": "Force spawn of all neutrals.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 509
    },
    "dota_spawn_rune": {
        "description": "Spawns a rune",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 695
    },
    "dota_spec_talentchanges_test": {
        "description": "Shows a test toast",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 861
    },
    "dota_spectator_decreasereplayspeed": {
        "description": "Decrease replay speed",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 868
    },
    "dota_spectator_fowtoggle": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 875
    },
    "dota_spectator_hudhide": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 881
    },
    "dota_spectator_hudshow": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 880
    },
    "dota_spectator_increasereplayspeed": {
        "description": "Increase replay speed",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 867
    },
    "dota_spectator_pausetoggle": {
        "description": "Toggle replay play/pause",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 869
    },
    "dota_spectator_revertcameraview": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 879
    },
    "dota_spectator_select_under_mouse": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1266
    },
    "dota_spectator_selectnexthero": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 877
    },
    "dota_spectator_selectprevioushero": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 878
    },
    "dota_spectator_skip": {
        "description": "Skip replay by a number of seconds.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 874
    },
    "dota_spectator_skip_back_1": {
        "description": "Skip replay back by 1st increment",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 870
    },
    "dota_spectator_skip_back_2": {
        "description": "Skip replay back by 2nd increment",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 871
    },
    "dota_spectator_skip_fwd_1": {
        "description": "Skip replay forward by 1st increment",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 872
    },
    "dota_spectator_skip_fwd_2": {
        "description": "Skip replay forward by 2nd increment",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 873
    },
    "dota_spectator_statstoggle": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 876
    },
    "dota_speech_test": {
        "description": "Play an arbitrary speech VCD as if it were coming out of the local player.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1268
    },
    "dota_speech_test_cycle": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1271
    },
    "dota_start_auto_save_test": {
        "description": "Start an auto save game test",
        "flags": "game, hidden",
        "flagsRaw": 33554452,
        "hasDefensiveFlag": false,
        "index": 668
    },
    "dota_start_new_player_pool": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1038
    },
    "dota_start_party_ready_check": {
        "description": "Start a party ready check.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1091
    },
    "dota_state_disconnect": {
        "description": "Transition to disconnect state on a listen server",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 673
    },
    "dota_steamlearn_load_metadata": {
        "description": "[project_id] [published_version] Test loads the inference metadata for the specified project",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 476
    },
    "dota_store_show_item_availability": {
        "description": "Given an item def, show the ways this is available in the store",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 928
    },
    "dota_store_show_item_unavailability": {
        "description": "Given an item def, show the reason why it's unavailable",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 929
    },
    "dota_sv_record_event_action_grant": {
        "description": "Event action grant ",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 467
    },
    "dota_takeherophotos": {
        "description": "Take a single full body shot of each hero.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1233
    },
    "dota_talent_upgrade_attribute": {
        "description": "Level up talent attribute.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 883
    },
    "dota_talent_upgrade_stat_left": {
        "description": "Level up talent on the left.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 884
    },
    "dota_talent_upgrade_stat_right": {
        "description": "Level up talent on the right.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 885
    },
    "dota_test_achievement_toast": {
        "description": "Create a toast for an achievement",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1099
    },
    "dota_test_add_toast": {
        "description": "Add a test toast to the dashboard's toast manager",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1000
    },
    "dota_test_buyback": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1270
    },
    "dota_test_challenge": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 638
    },
    "dota_test_custom_game_save": {
        "description": "Test custom game saving, only available from dota_launch_custom_game",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 672
    },
    "dota_test_disconnect_icon": {
        "description": "Test disconnect icon",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1076
    },
    "dota_test_glyph": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1269
    },
    "dota_test_hero_token_popup": {
        "description": "Show the hero token popup.",
        "flags": "devonly, client, cheat",
        "flagsRaw": 16394,
        "hasDefensiveFlag": false,
        "index": 952
    },
    "dota_test_in_game_prediction": {
        "description": "Tests the in-game prediction system",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 463
    },
    "dota_test_npc": {
        "description": "Creates a testing npc",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 653
    },
    "dota_test_plus_challenge": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 639
    },
    "dota_test_popup": {
        "description": "dota_test_popup",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1058
    },
    "dota_test_pregame_hud": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 854
    },
    "dota_test_pseudo_random": {
        "description": "Tests results of a pseudo-random generator",
        "flags": "devonly, game",
        "flagsRaw": 33554438,
        "hasDefensiveFlag": false,
        "index": 701
    },
    "dota_test_purchase_battle_pass_levels": {
        "description": "Test the battle pass levels purchasing dialog",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 954
    },
    "dota_test_purchase_plus": {
        "description": "Test the plus purchasing dialog",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 955
    },
    "dota_test_report_popup": {
        "description": "Test report popup",
        "flags": "devonly, client",
        "flagsRaw": 33554442,
        "hasDefensiveFlag": false,
        "index": 1078
    },
    "dota_test_steamchina_info": {
        "description": "Test the SteamChina info dialog",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 958
    },
    "dota_test_strange_gem": {
        "description": "Tests the strange gem system",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 475
    },
    "dota_test_strange_gem_display": {
        "description": "Tests displaying strange gem updates",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 685
    },
    "dota_test_teamshowcase": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 684
    },
    "dota_ti11_bracket_predictions_dump": {
        "description": "<league id>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1017
    },
    "dota_ti11_candy_shop_show_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1013
    },
    "dota_ti11_candy_shop_show_upcoming_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1014
    },
    "dota_ti11_diretide_show_page": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1016
    },
    "dota_toggle_assisted_camera_operator": {
        "description": "Toggle assisted camera operator mode. This is a hybrid of Directed mode with operator control.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1287
    },
    "dota_toggle_autoattack": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1272
    },
    "dota_toggle_broadcaster_cameraman": {
        "description": "toggle cameraman",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1243
    },
    "dota_toggle_combatlog": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1106
    },
    "dota_toggle_free_camera": {
        "description": "Toggle free camera mode. Only available in DotaTV and replays.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1289
    },
    "dota_toggle_hero_movie_mode": {
        "description": "Show item details pages with minimal UI, for recording hero movies",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1001
    },
    "dota_tracked_stats_dump": {
        "description": "[all|player|team|match] Dump currently tracked stats.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 474
    },
    "dota_tree_try_to_make_solid": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1278
    },
    "dota_treerespawn": {
        "description": "Respawns all trees on the map.",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 691
    },
    "dota_tutorial_start": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1316
    },
    "dota_unit_setvalue": {
        "description": "Set a value on a unit",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 506
    },
    "dota_update_p4_team_info_cache": {
        "description": "<league_ids> - loads all the team info from a set of league ids, and then saves it into team_info_cache.json",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 930
    },
    "dota_validate_hero_sets": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1074
    },
    "dota_versus_screen_show_debug": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1050
    },
    "dota_view_store_item_details": {
        "description": "<itemdef>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1035
    },
    "dota_weekend_tourney_debug": {
        "description": "Prints local weekend tourney object(s), if any",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1177
    },
    "dota_wraith_king_arcana_clear_claimed": {
        "description": "Unclaim everything",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 963
    },
    "dota_wraith_king_arcana_map_show_all_alive": {
        "description": "Show every hero as alive",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 961
    },
    "dotadev_bind": {
        "description": "For development: Bind a key to in dota (ALT+key) allowed.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1141
    },
    "dotadev_binds_show": {
        "description": "For development: List all developer binds.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1143
    },
    "dotadev_unbind": {
        "description": "For development: Unbind a key to in dota (ALT+key) allowed.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1142
    },
    "download_ugc_image_handle": {
        "description": "Download a UGC image file by handle",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 960
    },
    "dpc_watch_schedule_set_favorite_team_state": {
        "description": "Set favorite state for a specific team",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1067
    },
    "drawcross": {
        "description": "Draws a cross at the given location\n\tArguments: x y z",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 799
    },
    "drawline": {
        "description": "Draws line between two 3D Points.\n\tGreen if no collision\n\tRed is collides with something\n\tArguments: x1 y1 z1 x2 y2 z2",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 798
    },
    "duel_accept_toast_test": {
        "description": "<requestor_id>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1167
    },
    "duel_request_toast_test": {
        "description": "<requestor_id>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1166
    },
    "dump_challenges": {
        "description": "dump_challenges",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1178
    },
    "dump_client_projectiles": {
        "description": "Spews a list of all client-side projectiles",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1276
    },
    "dump_emoticons_csv": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1170
    },
    "dump_entity_report": {
        "description": "List all client-side entities in the scene",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1360
    },
    "dump_globals": {
        "description": "Dump all global entities/states",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 605
    },
    "dump_loc_token": {
        "description": "List information on the given token",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 245
    },
    "dump_localization_files": {
        "description": "List all loaded localization files",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 244
    },
    "dump_modifier_list": {
        "description": "Dumps all modifiers that exist in the game",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 661
    },
    "dump_panorama_css_properties": {
        "description": "Prints out all valid panorama CSS properties and their documentation",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 1505
    },
    "dump_panorama_events": {
        "description": "print panorama event types and their documentation",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 1503
    },
    "dump_panorama_render_command_stats": {
        "description": "",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 1506
    },
    "dump_portrait_world_info_with_debug_name_containing": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1095
    },
    "dump_quests": {
        "description": "dump_quests",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1179
    },
    "dump_response_symbols": {
        "description": "print all response symbols to the console",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 704
    },
    "dump_secondary_scene_worlds": {
        "description": "Lists secondary scene worlds and ref counts",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1470
    },
    "dump_visible_buffs": {
        "description": "Print out non-hidden buffs.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 659
    },
    "dumpparticlelist": {
        "description": "Print out information on existing particle systems",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 430
    },
    "dumpstringtable": {
        "description": "Usage:  dumpstringtable <tablename |all> <sv | cl> <verbose | simple> <element>      Print string tables to console, verbose to dump data, simple to show name and count only, can specifiy a single numeric element index to restrict spew.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 210
    },
    "echo": {
        "description": "Echo text to console.",
        "flags": "server_can_execute",
        "flagsRaw": 16777216,
        "hasDefensiveFlag": false,
        "index": 69
    },
    "echoln": {
        "description": "Echo the command arguments on the console",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 65
    },
    "econ_show_items_with_tag": {
        "description": "Lists the item definitions that have a specified tag.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 897
    },
    "enable_priority_boost": {
        "description": "Disable focus based priority boost",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 133
    },
    "endmovie": {
        "description": "Stop recording movie frames.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 204
    },
    "engine_frametime_print_report": {
        "description": "Print a performance report from the current data in the vprof 'lite' profiler",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 25
    },
    "ent_absbox": {
        "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 777
    },
    "ent_actornames": {
        "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 767
    },
    "ent_animgraph_debug": {
        "description": "Displays debug draws about the given entity(ies) animgraph\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 710
    },
    "ent_animgraph_record": {
        "description": "Toggles recording of animgraph replay of the given entity(s)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 796
    },
    "ent_animgraph_setvar": {
        "description": "Sets a variable on the animgraph of the given entity(s)\n\tArguments:   <varname>=<value>\t<{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 795
    },
    "ent_attachments": {
        "description": "Displays the attachment points on an entity.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 778
    },
    "ent_autoaim": {
        "description": "Displays the entity's autoaim radius.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 752
    },
    "ent_bbox": {
        "description": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 776
    },
    "ent_call": {
        "description": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 757
    },
    "ent_cancelpendingentfires": {
        "description": "Cancels all ent_fire created outputs that are currently waiting for their delay to expire.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 748
    },
    "ent_characterize": {
        "description": "Spew PVS debug info for entity",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 623
    },
    "ent_clear_debug_overlays": {
        "description": "Clears all debug overlays",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 790
    },
    "ent_create": {
        "description": "Creates an entity of the given designer or subclass name where the player is looking.",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 553
    },
    "ent_debug_anim": {
        "description": "Use the specified entity for animation debugging.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1454
    },
    "ent_debug_origin_changes": {
        "description": "turn on, off, or toggle origin changes on server for entity by index",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 737
    },
    "ent_find": {
        "description": "Find and list all entities with classnames or targetnames that contain the specified substrings.\nFormat: find_ent <substring>\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 760
    },
    "ent_find_index": {
        "description": "Display data for entity matching specified index.\nFormat: find_ent_index <index>\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 761
    },
    "ent_fire": {
        "description": "Usage:\n   ent_fire <target> [action] [value] [delay]\n",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 747
    },
    "ent_fire_output": {
        "description": "Usage:\n   ent_fire_output <target> [output name] [value] [delay]\n",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 749
    },
    "ent_grab": {
        "description": "grabs the object in front of the player. Options: -loose -multiple -toggle",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 764
    },
    "ent_hierarchy": {
        "description": "Prints the entity hierarchy tree rooted at the specified ent(s)",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 802
    },
    "ent_hitbox": {
        "description": "Displays the hitboxes for the given entity(ies).\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 784
    },
    "ent_info": {
        "description": "Usage:\n   ent_info <class name>\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 750
    },
    "ent_joints": {
        "description": "Displays the joint names + axes an entity.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 779
    },
    "ent_kill": {
        "description": "Kills the given entity(s)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 794
    },
    "ent_messages": {
        "description": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 787
    },
    "ent_name": {
        "description": "Displays the entity name",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 766
    },
    "ent_orient": {
        "description": "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis.\n\tFormat: ent_orient <entity name> <optional: allangles>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 557
    },
    "ent_picker": {
        "description": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.\n\tArguments:\tfull - enables all debug information",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 788
    },
    "ent_pivot": {
        "description": "Displays the pivot for the given entity(ies).\n\t(y=up=green, z=forward=blue, x=left=red). \n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 781
    },
    "ent_rbox": {
        "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1448
    },
    "ent_remove": {
        "description": "Removes the given entity(s)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 792
    },
    "ent_remove_all": {
        "description": "Removes all entities of the specified type\n\tArguments:   \t{entity_name} / {class_name} ",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 793
    },
    "ent_rotate": {
        "description": "Rotates an entity by a specified # of degrees",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 622
    },
    "ent_scale": {
        "description": "Scales entities.\tArguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 791
    },
    "ent_scenehierarchy": {
        "description": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 803
    },
    "ent_script_dump": {
        "description": "Dumps the names and values of this entity's script scope to the console\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 758
    },
    "ent_select": {
        "description": "Select or deselects the given entities(s) for later manipulation\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 786
    },
    "ent_setang": {
        "description": "Set entity angles",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 756
    },
    "ent_setname": {
        "description": "Sets the targetname of the given entity(s)\n\tArguments:   \t<new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 759
    },
    "ent_setpos": {
        "description": "Move entity to position",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 755
    },
    "ent_show_damage": {
        "description": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 789
    },
    "ent_show_response_criteria": {
        "description": "Print, to the console, an entity's current criteria set used to select responses.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 751
    },
    "ent_skeleton": {
        "description": "Displays the skeleton for the given entity(ies).\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 783
    },
    "ent_spew_derived_classes": {
        "description": "Prints out all entity classes which inherit from a specified base class",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 733
    },
    "ent_teleport": {
        "description": "Teleport the specified entity to where the player is looking.\n\tFormat: ent_teleport <entity name>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 556
    },
    "ent_text": {
        "description": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 768
    },
    "ent_text256": {
        "description": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 770
    },
    "ent_text_clear": {
        "description": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 771
    },
    "ent_text_filter": {
        "description": "Set which ent_text filters you want: ",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 754
    },
    "ent_text_radius": {
        "description": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)\n\t2 Arguments:   \t<Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 769
    },
    "ent_text_sticky_add": {
        "description": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 772
    },
    "ent_text_sticky_clear": {
        "description": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 774
    },
    "ent_text_sticky_dump": {
        "description": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 775
    },
    "ent_text_sticky_remove": {
        "description": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 773
    },
    "ent_ungrab": {
        "description": "un-grabs all objects",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 765
    },
    "ent_vcollide_wireframe": {
        "description": "Displays the interpolated vcollide wireframe pm am entity.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 785
    },
    "ent_viewentity": {
        "description": "Selects the picked entity as the view entity",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 738
    },
    "ent_viewoffset": {
        "description": "Displays the eye position for the given entity(ies) in red.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 780
    },
    "ent_viewpunch": {
        "description": "Used to debug ViewPunch",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 739
    },
    "ent_visibility_traces": {
        "description": "Displays visibility traces for the given entity\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 782
    },
    "entity_lump_list": {
        "description": "List all known entity lumps",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 416
    },
    "entity_lump_spew": {
        "description": "Dump the contents of an entity lump",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 417
    },
    "entityreport": {
        "description": "Reports all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 1519
    },
    "entitysummary": {
        "description": "Summarizes (by class) all extant entities. Optional 2nd arg is a substring of a classname that the list will be filtered by.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 1520
    },
    "ents": {
        "description": "List server entities, sorted by spawn group",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 732
    },
    "escape": {
        "description": "Escape key pressed.",
        "flags": "release, clientcmd_can_execute",
        "flagsRaw": 268959744,
        "hasDefensiveFlag": false,
        "index": 223
    },
    "exec": {
        "description": "Execute a cfg file",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 51
    },
    "exec_async": {
        "description": "Execute a cfg file over time",
        "flags": "cheat, norecord",
        "flagsRaw": 147456,
        "hasDefensiveFlag": false,
        "index": 53
    },
    "execifexists": {
        "description": "Execute a cfg file if file exists",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 52
    },
    "explode": {
        "description": "Kills the player with explosive damage",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 576
    },
    "explodevector": {
        "description": "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 578
    },
    "fadein": {
        "description": "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 602
    },
    "fadeout": {
        "description": "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 601
    },
    "fake_accept_state": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1040
    },
    "fake_meta_xp": {
        "description": "Fake meta xp values",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 470
    },
    "fantasy_craft_decode_title_awards": {
        "description": "<league_id> <award_number> Convert a title awards uint64 into which titles were awarded",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1116
    },
    "fantasy_craft_populate_league_data": {
        "description": "<fantasy league id> adds teams to the fantasy crafting data for the given fantasy league id",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1112
    },
    "fantasy_craft_reset_tablets": {
        "description": "<fantasy league id> Rerolls all attributes on all tablets for the account",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1114
    },
    "fantasy_craft_reset_tutorial": {
        "description": "Resets the user back to the base tutorial state",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1019
    },
    "fantasy_craft_set_roll_tokens": {
        "description": "<fantasy league id> <period id> <token_amount> Sets available roll tokens for the account",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1113
    },
    "fantasy_craft_upgrade": {
        "description": "<fantasy league id> Upgrades the tablet to the appropriate level for the period",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1115
    },
    "find": {
        "description": "Find concommands with the specified string in their name/help text.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 0
    },
    "findflags": {
        "description": "Find concommands by flags.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 9
    },
    "finish_tutorial": {
        "description": "Makes the tutorial end",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 483
    },
    "firetarget": {
        "description": "",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 746
    },
    "first_blood_test": {
        "description": "<killer_id> <victim_id>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1163
    },
    "firstperson": {
        "description": "Switch to firstperson camera.",
        "flags": "client, release, execute_per_tick",
        "flagsRaw": 537395208,
        "hasDefensiveFlag": false,
        "index": 1387
    },
    "fix_keyvalues_bad_newlines": {
        "description": "Attempt to fix up keyvalues files with bad UTF8 newline characters in UTF16 files",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1184
    },
    "fix_keyvalues_missing_quotes": {
        "description": "Attempt to fix up keyvalues files that have incorrect or missing quotes.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1183
    },
    "fog_override_color": {
        "description": "Sets the fog color override",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 38
    },
    "force_assert": {
        "description": "Fire an assertion failure",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 127
    },
    "force_fatal_error": {
        "description": "Fire a fatal error",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 128
    },
    "force_floating_point_exceptions": {
        "description": "Enable floating point exceptions to find bugs",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 137
    },
    "force_hibernate": {
        "description": "Force toggle hibernation state",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 129
    },
    "fow_client_stats": {
        "description": "displays fog of war stats",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1118
    },
    "fow_server_stats": {
        "description": "displays fog of war stats",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 457
    },
    "fow_server_test_tempviewer": {
        "description": "test a temp viewer",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 456
    },
    "fow_viz": {
        "description": "FoW viz commands",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 454
    },
    "fp_trace": {
        "description": "Toggle field path tracing to file\n",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 293
    },
    "fs_clear_open_duplicate_times": {
        "description": "Clear the list of files that have been opened.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 241
    },
    "fs_dump_open_duplicate_times": {
        "description": "Set fs_report_long_reads 1 before loading to use this. Prints a list of files that were opened more than once and ~how long was spent reading from them.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 240
    },
    "fs_spew_readfieldlist": {
        "description": "index <threshold bytes>: spew changes to ent index, optionally only spewing if update is > than threshold bytes",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 292
    },
    "game_particle_manager_dump_requeue": {
        "description": "Dump contents of particle manager requeue",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1337
    },
    "game_particle_manager_list_active": {
        "description": "Dump counts of active particles",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1338
    },
    "gameevents_analyze": {
        "description": "compare game events across all mods",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 736
    },
    "gameevents_dumptofile": {
        "description": "write gameevents keyvalues (sorted by name) to gameevents_<modname>.txt",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 735
    },
    "gameinstructor_dump_open_lessons": {
        "description": "Gives a list of all currently open lessons.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1364
    },
    "gameinstructor_dump_run_lesson_counts": {
        "description": "Gives a list of lessons that been completed or shown",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1365
    },
    "gameinstructor_reload_lessons": {
        "description": "Shuts down all open lessons and reloads them from the script file.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1362
    },
    "gameinstructor_reset_counts": {
        "description": "Resets all display and success counts to zero.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1363
    },
    "gameinstructor_teach_lesson": {
        "description": "Force a specific lesson to be triggered",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1366
    },
    "gameui_activate": {
        "description": "Shows the game UI",
        "flags": "hidden, release",
        "flagsRaw": 524304,
        "hasDefensiveFlag": false,
        "index": 224
    },
    "gameui_allowescape": {
        "description": "Escape key allowed to hide game UI",
        "flags": "hidden, release",
        "flagsRaw": 524304,
        "hasDefensiveFlag": false,
        "index": 228
    },
    "gameui_allowescapetoshow": {
        "description": "Escape key allowed to show game UI",
        "flags": "hidden, release",
        "flagsRaw": 524304,
        "hasDefensiveFlag": false,
        "index": 226
    },
    "gameui_hide": {
        "description": "Hides the game UI",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 222
    },
    "gameui_preventescape": {
        "description": "Escape key doesn't hide game UI",
        "flags": "hidden, release",
        "flagsRaw": 524304,
        "hasDefensiveFlag": false,
        "index": 225
    },
    "gameui_preventescapetoshow": {
        "description": "Escape key doesn't show game UI",
        "flags": "hidden, release",
        "flagsRaw": 524304,
        "hasDefensiveFlag": false,
        "index": 227
    },
    "generate_minidump_comment": {
        "description": "Generate a minidump comment and spew the results to the console",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 135
    },
    "generate_null_container": {
        "description": "Generated a nulled out container.",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 367
    },
    "generate_split_challenge_files": {
        "description": "generate_split_challenge_files",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1293
    },
    "generate_trash_synth": {
        "description": "Args: [Asset directory Path]",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 364
    },
    "getpos": {
        "description": "dump position and angles to the console",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1204
    },
    "getpos_exact": {
        "description": "dump origin and angles to the console",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1205
    },
    "give": {
        "description": "Give item to player.\n\tArguments: <item_name>",
        "flags": "game, vconsole_fuzzy",
        "flagsRaw": 41943044,
        "hasDefensiveFlag": false,
        "index": 581
    },
    "give_oriented": {
        "description": "Give item oriented to player angles.\n\tArguments: <item_name>",
        "flags": "game, vconsole_fuzzy",
        "flagsRaw": 41943044,
        "hasDefensiveFlag": false,
        "index": 582
    },
    "givecurrentammo": {
        "description": "Give a supply of ammo for current weapon..\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 712
    },
    "global_set": {
        "description": "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD).",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 607
    },
    "god": {
        "description": "Toggle by default, or 0 to disable and 1 to enable. Player becomes invulnerable.",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 585
    },
    "graphcontroller_dumpparams": {
        "description": "Print all anim graph parameters for the specified entity.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 708
    },
    "grep": {
        "description": "grep line for pattern, print out matching lines only",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 67
    },
    "groundlist": {
        "description": "Display ground entity list <index>",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 593
    },
    "groups": {
        "description": "Show status of all spawn groups.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 1509
    },
    "guidepanel_resetnag": {
        "description": "Resets the nag count on the guide panel",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1070
    },
    "help": {
        "description": "Find help about a convar/concommand.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 8
    },
    "hero_relic_generate_drops": {
        "description": "Autogenerates a drop file",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1026
    },
    "hide_sf_shop": {
        "description": "hide shop",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1133
    },
    "hideconsole": {
        "description": "Hide the console.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 238
    },
    "host_timescale_dec": {
        "description": "Decrement the timescale by one step",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 27
    },
    "host_timescale_inc": {
        "description": "Increment the timescale by one step",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 26
    },
    "host_writeconfig": {
        "description": "Saves out the user config values.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 101
    },
    "hud_reloadscheme": {
        "description": "Reloads hud layout and animation scripts.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1396
    },
    "hud_toggle_visibility": {
        "description": "Toggles the Hud on and off",
        "flags": "client",
        "flagsRaw": 33554440,
        "hasDefensiveFlag": false,
        "index": 1077
    },
    "hurtme": {
        "description": "Hurts the player.\n\tArguments: <health to lose>",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 592
    },
    "ic": {
        "description": "interp entity count\n",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1353
    },
    "ik_debug_fabrik_backwards_iteration_toggle": {
        "description": "",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 308
    },
    "ik_debug_fabrik_forwards_iteration_toggle": {
        "description": "",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 309
    },
    "ime_hkl_info": {
        "description": "Spew IME HKL info.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 1508
    },
    "ime_info": {
        "description": "Spew IME info.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 242
    },
    "ime_supported_info": {
        "description": "Spew IME Supported info.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 1507
    },
    "imgui_cycle_undocked_window_focus": {
        "description": "Cycles focus between the game window and undocked imgui windows",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 415
    },
    "imgui_debug_entity": {
        "description": "Shows the entity browswer, focused on the entity you specify.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 719
    },
    "imgui_set_selection": {
        "description": "Sets ImGui selection",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 718
    },
    "imgui_set_status_text": {
        "description": "Sets ImGui header status text",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 720
    },
    "impulse": {
        "description": "Triggers impulse command",
        "flags": "client, release",
        "flagsRaw": 524296,
        "hasDefensiveFlag": false,
        "index": 1383
    },
    "in_forcebuttonstate": {
        "description": "Forces a button to be a particular state - WHEN PROCESSING USERCOMMANDS",
        "flags": "devonly, game, vconsole_fuzzy",
        "flagsRaw": 8388614,
        "hasDefensiveFlag": false,
        "index": 740
    },
    "in_forceinput": {
        "description": "Forces a button to be a particular state -- WHEN SAMPLING INPUT",
        "flags": "devonly, client, vconsole_fuzzy",
        "flagsRaw": 8388618,
        "hasDefensiveFlag": false,
        "index": 1384
    },
    "incrementvar": {
        "description": "Increment specified convar value.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 49
    },
    "input_state": {
        "description": "input_state",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 66
    },
    "inspectheroinworld": {
        "description": "Zoom into a selected hero in the world for a closer view.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1119
    },
    "instant_replay_goto_tick": {
        "description": "Goto a direct timestamp of the replay",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 166
    },
    "instant_replay_goto_tick_relative": {
        "description": "Goto a direct timestamp of the replay",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 167
    },
    "instant_replay_live": {
        "description": "If in replay, jumps back to live",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 168
    },
    "instant_replay_pause": {
        "description": "Pauses instant replay.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 161
    },
    "instant_replay_resume": {
        "description": "Resumes instant replay.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 162
    },
    "instant_replay_skip": {
        "description": "Number of seconds to skip back to instant replay from current position",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 164
    },
    "instant_replay_skip_live": {
        "description": "Number of seconds to skip back to instant replay from live",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 165
    },
    "instant_replay_timescale": {
        "description": "Sets instant replay speed.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 169
    },
    "instant_replay_togglepause": {
        "description": "Toggles instant replay.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 163
    },
    "invnext": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1220
    },
    "invnextselect": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1223
    },
    "invprev": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1221
    },
    "invprevselect": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1224
    },
    "iv_debug": {
        "description": "Spew interpolated var info for entity.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1356
    },
    "iv_interp": {
        "description": "Spew interpolated var info for entity.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1357
    },
    "iv_off": {
        "description": "Turn off all interpolation variable spew.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1359
    },
    "iv_on": {
        "description": "Spew both interpolated var debug info and history for entity.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1358
    },
    "jointeam": {
        "description": "Join a team",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 676
    },
    "jpeg_screenshot": {
        "description": "Take a jpeg screenshot: jpeg_screenshot [filename] [quality 1-100].",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 96
    },
    "key_findbinding": {
        "description": "Find key bound to specified command string.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 45
    },
    "key_listboundkeys": {
        "description": "List bound keys with bindings.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 44
    },
    "key_updatelayout": {
        "description": "Updates game keyboard layout to current windows keyboard setting.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 243
    },
    "kick": {
        "description": "Kick a player by name.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 88
    },
    "kickid": {
        "description": "Kick a player by userid or uniqueid, with a message.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 87
    },
    "kickid_hltv": {
        "description": "Kick a player by userid or uniqueid, with a message.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 89
    },
    "kill": {
        "description": "Kills the player with generic damage",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 575
    },
    "kill_streak_test": {
        "description": "<killer_id> <killer_streak> <killer_multikill> <victim_id> <victim_streak> <gold>",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1162
    },
    "killvector": {
        "description": "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 577
    },
    "lastinv": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1222
    },
    "listRecentNPCSpeech": {
        "description": "Displays a list of the last 5 lines of speech from NPCs.",
        "flags": "devonly, game, norecord",
        "flagsRaw": 131078,
        "hasDefensiveFlag": true,
        "index": 626
    },
    "listdemo": {
        "description": "List demo file contents.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 146
    },
    "listid": {
        "description": "Lists banned users.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 192
    },
    "listip": {
        "description": "List IP addresses on the ban list.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 188
    },
    "load": {
        "description": "Usage:\n   load [save file name]\n",
        "flags": "devonly, norecord, vconsole_fuzzy",
        "flagsRaw": 8519682,
        "hasDefensiveFlag": true,
        "index": 78
    },
    "load_files_as_key_values": {
        "description": "Attempt to load files as keyvalues",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1185
    },
    "load_master_item_schema": {
        "description": "Reloads the item master schema.",
        "flags": "devonly, game, hidden, cheat",
        "flagsRaw": 16406,
        "hasDefensiveFlag": false,
        "index": 520
    },
    "log": {
        "description": "Enables logging to file, console, and udp < on | off >.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 194
    },
    "log_color": {
        "description": "Set the color of a logging channel.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 4
    },
    "log_dumpchannels": {
        "description": "Dumps information about all logging channels.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 1
    },
    "log_flags": {
        "description": "Set the flags on a logging channel.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 5
    },
    "log_level": {
        "description": "Set the spew level of a logging channel.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 2
    },
    "log_verbosity": {
        "description": "Set the verbosity of a logging channel.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 3
    },
    "loop_dump": {
        "description": "Print the listeners of the current loop mode",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 23
    },
    "lrucache_flush": {
        "description": "Flushes the specified cache",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 22
    },
    "lrucache_reset_stats": {
        "description": "Resets stats for the specified CUtlLRUCaches (or all if none specified)",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 20
    },
    "lrucache_set_size": {
        "description": "Sets the specified cache to the specified size",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 21
    },
    "lrucache_stats": {
        "description": "Spews information about all CUtlLRUCaches",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 19
    },
    "lua_report_memory": {
        "description": "",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 288
    },
    "map": {
        "description": "map <mapname> :Load a new map.",
        "flags": "release, vconsole_fuzzy, vconsole_set_focus",
        "flagsRaw": 143130624,
        "hasDefensiveFlag": false,
        "index": 72
    },
    "map_enable_background_maps": {
        "description": "Enables/disables portrait background maps",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1094
    },
    "maps": {
        "description": "Displays list of maps.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 71
    },
    "markup_group_ent_bbox": {
        "description": "markup_group_ent_bbox <markup_group name> -> toggle ent_bbox for all members of the named markup group",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 610
    },
    "markup_group_ent_text": {
        "description": "markup_group_ent_text <markup_group name> -> toggle ent_text for all members of the named markup group",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 609
    },
    "markup_group_spew": {
        "description": "Spew all current markup groups and their members",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 608
    },
    "mat_assert_on_shader_use": {
        "description": "Assert on shader used based on substring of shader name",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 265
    },
    "mat_clearshadercache": {
        "description": "Clears the shader cache used for dynamic shader compile.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 270
    },
    "mat_disable_dynamic_shader_compile": {
        "description": "Reloads all shaders from vcs files until the next time mat_reloadshaders is called",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 269
    },
    "mat_print_dead_materials": {
        "description": "Print loaded materials that have no valid layers due to not supporting any of the modes in gameinfo.gi.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 274
    },
    "mat_print_error_materials": {
        "description": "Print loaded materials that are using the error shader or material.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 275
    },
    "mat_print_expensive_materials": {
        "description": "Print materials sorted by cost heuristic",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 278
    },
    "mat_print_material_info": {
        "description": "Print info about a specific material",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 280
    },
    "mat_print_materials": {
        "description": "Print loaded materials. Takes an optional substring as an argument.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 273
    },
    "mat_print_materials_last_frame": {
        "description": "Print materials used last frame",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 276
    },
    "mat_print_materials_unused": {
        "description": "Print materials that have never been used",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 277
    },
    "mat_print_modes": {
        "description": "Print supported rendering modes.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 286
    },
    "mat_print_shader_info": {
        "description": "Print detailed info about a single shader. Takes a shader name (hero.vfx) as an argument.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 285
    },
    "mat_print_shader_quality": {
        "description": "Print current shader quality setting",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 272
    },
    "mat_print_shaders": {
        "description": "Print loaded shaders. Takes a substring as an argument.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 284
    },
    "mat_print_textures": {
        "description": "Print loaded textures in alphabetical order. Takes an optional substring as an argument.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 281
    },
    "mat_print_textures_size": {
        "description": "Print loaded textures in ascending size order. Takes an optional substring as an argument.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 282
    },
    "mat_print_textures_size_in_memory": {
        "description": "Print loaded textures in ascending size order as they are in memory. Takes an optional substring as an argument.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 283
    },
    "mat_reinitmaterials": {
        "description": "Reinitializes all loaded materials, reloading their shaders.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 267
    },
    "mat_reloadmaterials": {
        "description": "Reloads all materials. Takes an optional substring as an argument.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 266
    },
    "mat_reloadshaders": {
        "description": "Reloads all shaders. Takes optional substrings of shader names to recompile as arguments.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 268
    },
    "mat_reset_material_costs": {
        "description": "Reset material cost heuristic",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 279
    },
    "mat_set_shader_quality": {
        "description": "Force shader quality setting (valid values are 0 or 1)",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 271
    },
    "mc_attack": {
        "description": "",
        "flags": "devonly, client, hidden",
        "flagsRaw": 26,
        "hasDefensiveFlag": true,
        "index": 1258
    },
    "mc_move": {
        "description": "",
        "flags": "devonly, client, hidden",
        "flagsRaw": 26,
        "hasDefensiveFlag": true,
        "index": 1256
    },
    "mc_patrol": {
        "description": "",
        "flags": "devonly, client, hidden",
        "flagsRaw": 26,
        "hasDefensiveFlag": true,
        "index": 1257
    },
    "mem_compact": {
        "description": "Compacts the heap",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 116
    },
    "mem_dump": {
        "description": "Dump memory stats to text file or <stdout>.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 115
    },
    "mem_test": {
        "description": "",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 209
    },
    "memory": {
        "description": "Print memory stats.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 118
    },
    "memory_check_limit": {
        "description": "Assert if peak memory use is over the limit.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 119
    },
    "midi_connect_port": {
        "description": "Attempt to open a connection on the passed port ( or 0 if not specfied ). Will close existing connection",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1148
    },
    "midi_release": {
        "description": "Release any connected MIDI device",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1149
    },
    "midi_reset_notes": {
        "description": "Send emergency Note OFF for all active notes on all channels",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1153
    },
    "midi_status": {
        "description": "Dump info about connected MIDI devices",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1150
    },
    "midi_test_off": {
        "description": "Send a test note OFF to the connected MIDI device",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1152
    },
    "midi_test_on": {
        "description": "Send a test note ON to the connected MIDI device",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1151
    },
    "minimap_create": {
        "description": "Does a bunch of work to create a minimap",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1318
    },
    "model_combiner_dumpstats": {
        "description": "Dump the stats for the model combiner manager.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1343
    },
    "model_dump_convert_info": {
        "description": "Print model load-time conversion info",
        "flags": "linked, devonly, client",
        "flagsRaw": 11,
        "hasDefensiveFlag": true,
        "index": 311
    },
    "movie_fixwave": {
        "description": "Fixup corrupted .wav file if engine crashed during startmovie/endmovie, etc.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 346
    },
    "mp_disable_autokick": {
        "description": "Prevents a userid from being auto-kicked",
        "flags": "game, release",
        "flagsRaw": 524292,
        "hasDefensiveFlag": false,
        "index": 711
    },
    "multiunit_page_next": {
        "description": "cycle to the next multiunit page",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1080
    },
    "multiunit_page_prev": {
        "description": "cycle to the previous multiunit page",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1081
    },
    "multvar": {
        "description": "Multiply specified convar value.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 57
    },
    "nav_add_to_selected_set": {
        "description": "Add current area to the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 531
    },
    "nav_add_to_selected_set_by_id": {
        "description": "Add specified area id to the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 532
    },
    "nav_avoid": {
        "description": "Toggles the 'avoid this area when possible' flag used by the AI system.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 434
    },
    "nav_begin_deselecting": {
        "description": "Start continuously removing from the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 547
    },
    "nav_begin_drag_deselecting": {
        "description": "Start dragging a selection area.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 540
    },
    "nav_begin_drag_selecting": {
        "description": "Start dragging a selection area.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 538
    },
    "nav_begin_selecting": {
        "description": "Start continuously adding to the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 536
    },
    "nav_clear_attribute": {
        "description": "Remove given nav attribute from all areas in the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 438
    },
    "nav_clear_attributes": {
        "description": "Clear all nav attributes of selected area.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 437
    },
    "nav_clear_selected_set": {
        "description": "Clear the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 535
    },
    "nav_create_indirect_connection": {
        "description": "Create a connection between the selected area and the area pointed at by the crosshair.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 523
    },
    "nav_delete": {
        "description": "Deletes the currently highlighted Area.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 524
    },
    "nav_delete_all_hull": {
        "description": "Deletes all areas with given hull category.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 526
    },
    "nav_delete_marked": {
        "description": "Deletes the currently marked Area (if any).",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 525
    },
    "nav_disconnect": {
        "description": "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 433
    },
    "nav_end_deselecting": {
        "description": "Stop continuously removing from the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 548
    },
    "nav_end_drag_deselecting": {
        "description": "Stop dragging a selection area.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 541
    },
    "nav_end_drag_selecting": {
        "description": "Stop dragging a selection area.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 539
    },
    "nav_end_selecting": {
        "description": "Stop continuously adding to the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 537
    },
    "nav_lower_drag_volume_max": {
        "description": "Lower the top of the drag select volume.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 543
    },
    "nav_lower_drag_volume_min": {
        "description": "Lower the bottom of the drag select volume.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 545
    },
    "nav_mark": {
        "description": "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 551
    },
    "nav_mark_attribute": {
        "description": "Set nav attribute for all areas in the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 439
    },
    "nav_raise_drag_volume_max": {
        "description": "Raise the top of the drag select volume.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 542
    },
    "nav_raise_drag_volume_min": {
        "description": "Raise the bottom of the drag select volume.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 544
    },
    "nav_recall_selected_set": {
        "description": "Re-selects the stored selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 530
    },
    "nav_remove_from_selected_set": {
        "description": "Remove current area from the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 533
    },
    "nav_select_radius": {
        "description": "Adds all areas in a radius to the selection set",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 527
    },
    "nav_select_with_attribute": {
        "description": "Selects areas with the given attribute.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 440
    },
    "nav_split": {
        "description": "To split an Area into two, align the split line using your cursor and invoke the split command.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 550
    },
    "nav_store_selected_set": {
        "description": "Stores the current selected set for later retrieval.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 529
    },
    "nav_switch": {
        "description": "Switches to navmesh for the specified spawngroup",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 441
    },
    "nav_test_level_hull": {
        "description": "Find entities that intrude into the nav mesh.  List those entities in console output, and display bounding boxes around them for a while.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 435
    },
    "nav_test_level_hull_move": {
        "description": "",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 436
    },
    "nav_toggle_deselecting": {
        "description": "Start or stop continuously removing from the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 549
    },
    "nav_toggle_in_selected_set": {
        "description": "Remove current area from the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 534
    },
    "nav_toggle_selected_set": {
        "description": "Toggles all areas into/out of the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 528
    },
    "nav_toggle_selecting": {
        "description": "Start or stop continuously adding to the selected set.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 546
    },
    "nav_unmark": {
        "description": "Clears the marked Area or Ladder.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 552
    },
    "nb_command": {
        "description": "Sends a command string to all bots",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 445
    },
    "nb_debug": {
        "description": "Debug NextBots.  Categories are: BEHAVIOR, LOOK_AT, PATH, ANIMATION, LOCOMOTION, VISION, HEARING, EVENTS, ERRORS.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 448
    },
    "nb_debug_filter": {
        "description": "Add items to the NextBot debug filter. Items can be entindexes or part of the identifier of one or more bots.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 449
    },
    "nb_delete_all": {
        "description": "Delete all non-player NextBot entities.  Equivalent to script 'NextBotManager.DeleteAll(...)'",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 447
    },
    "nb_force_look_at": {
        "description": "Force selected bot to look at the local player's position",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 451
    },
    "nb_move_to_cursor": {
        "description": "Tell all NextBots to move to the cursor position",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 446
    },
    "nb_select": {
        "description": "Select the bot you are aiming at for further debug operations.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 450
    },
    "nb_warp_selected_here": {
        "description": "Teleport the selected bot to your cursor position",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 452
    },
    "net_captureculldata": {
        "description": "Captures low-level data to replay path culling algorithm behavior in controlled unit test environment",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 294
    },
    "net_channels": {
        "description": "Shows net channel info",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 298
    },
    "net_connections_stats": {
        "description": "Print detailed network statistics for each network connection",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 300
    },
    "net_fakelag": {
        "description": "Shortcut to set both FakePacketLag_Recv and FakePacketLag_Send net options",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 303
    },
    "net_fakeloss": {
        "description": "Shortcut to set both FakePacketLoss_Recv and FakePacketLoss_Send net options",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 304
    },
    "net_listallmessages": {
        "description": "List all registered net messages",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 296
    },
    "net_messageinfo": {
        "description": "Display info about a message (by classname or id)",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 297
    },
    "net_option": {
        "description": "Get or set SteamNetworkingSockets options such as fake packet lag and loss",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 301
    },
    "net_print_sdr_ping_times": {
        "description": "Print current ping times to SDR points of presence, and selected route",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 305
    },
    "net_reloadgameevents": {
        "description": "Reload the game events",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 734
    },
    "net_serializedentitymemory": {
        "description": "Spew CSerializedEntity memory",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 306
    },
    "net_serializedentitymetadatainfo": {
        "description": "Spew CSerializedEntity metadata information",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 307
    },
    "net_spewcounts": {
        "description": "Spew serializer counts, client only by default, specify server to spew server counts\n",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 289
    },
    "net_spewserializer": {
        "description": "Spew serializer info\n",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 290
    },
    "net_stats_json": {
        "description": "Output server networking statistics in json format",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 199
    },
    "net_status": {
        "description": "Shows current network status",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 299
    },
    "net_validatemessages": {
        "description": "Activates/deactivates net message validation",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 295
    },
    "net_why_field_excluded": {
        "description": "<classname> <fieldname>:  spew why field was excluded from networking for classname.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 291
    },
    "nextdemo": {
        "description": "Play next demo in sequence.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 158
    },
    "nian_cast_ability": {
        "description": "All nians on the map will cast the specified ability ",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 655
    },
    "nian_stun": {
        "description": "Stuns all nians with the specified stun type (flinch|knockdown|scared)",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 654
    },
    "noclip": {
        "description": "Toggle. Player becomes non-solid and flies.  Optional argument of 0 or 1 to force enable/disable",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 741
    },
    "notarget": {
        "description": "Toggle. Player becomes hidden to NPCs.",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 591
    },
    "npc_destroy": {
        "description": "Removes the given NPC(s) from the universe\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 443
    },
    "npc_kill": {
        "description": "Kills the given NPC(s)\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 444
    },
    "npc_select": {
        "description": "Select or deselects the given NPC(s) for later manipulation.  Selected NPC's are shown surrounded by a red translucent box\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 442
    },
    "npc_test_autostyle": {
        "description": "Debugging helper to try out different autostyle configurations\n\tArguments:   \t<{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}> <var name> <value>\n",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 663
    },
    "open_asset": {
        "description": "Opens an asset in it's primary editor of choice. Specify the full path to the asset from the mod directory.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 131
    },
    "openshop_category": {
        "description": "opens shop from clicks on the world shop model, specific tab request",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1135
    },
    "overwatch_show_report_popup": {
        "description": "Shows the report popup",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 953
    },
    "p2p_listpeers": {
        "description": "List currently known peers.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 86
    },
    "p2p_ping": {
        "description": "Ping a peer.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1367
    },
    "panorama_dispatch_event": {
        "description": "Dispatch the event defined by the argument string. No creating panel is specified.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 1501
    },
    "panorama_dump_symbols": {
        "description": "<ESymbolType> Dump all of the symbols in the Panorama symbol table",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 1499
    },
    "panorama_generate_layout_xsd": {
        "description": "Generate the Layout XML Schema Definition for the current run-time (types are dependent on which game DLL is running).",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 1502
    },
    "panorama_print_cache_status": {
        "description": "Print internal panorama refcounts for every file",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 1500
    },
    "panorama_print_svg_stats": {
        "description": "",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 1504
    },
    "particle_profile": {
        "description": "Profile particle",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 431
    },
    "particle_profile_spike": {
        "description": "Profile particle spike",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 432
    },
    "particle_reset_assertions": {
        "description": "Causes all single-fire particle assertions to trigger once more.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 428
    },
    "particle_stop_all": {
        "description": "Stops all particle systems currently playing",
        "flags": "devonly, client, cheat",
        "flagsRaw": 16394,
        "hasDefensiveFlag": false,
        "index": 429
    },
    "particle_system_start": {
        "description": "start the specified particle system",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 689
    },
    "particle_system_stop": {
        "description": "stop the specified particle system",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 690
    },
    "particle_test_create": {
        "description": "Creates the named particle system where the player is looking.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 613
    },
    "particle_test_destroy": {
        "description": "Destroys all particle systems matching the specified name.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 614
    },
    "particle_test_start": {
        "description": "Dispatches the test particle system with the parameters specified in particle_test_file,\n particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 611
    },
    "particle_test_stop": {
        "description": "Stops all particle systems on the selected entities.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 612
    },
    "path": {
        "description": "Show the filesystem path.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 239
    },
    "pause": {
        "description": "Toggle the server pause state.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 82
    },
    "phys_create_test_character_proxy": {
        "description": "Create test character proxy",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 822
    },
    "phys_debug_draw": {
        "description": "Set up debug-draw of physics internal state",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 310
    },
    "phys_dump_intersection_controller": {
        "description": "Dump intersection controller status",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 813
    },
    "phys_dump_main_world": {
        "description": "Dump physics main world to file",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 810
    },
    "phys_list": {
        "description": "List all physics component contents of every entity in the game;\n    -stream [1|0] : initiate|terminate streaming to physics debugger\n    -allents: include non-physical entities\n    -classes: print class names\n    -sdk    : Rubikon build\n    -world  : current state of the world\n    -world -touch: list body pairs (bodies in contact)\n    -world -save <name>: save world to a file\n    -world -mem: memory dump\n    -world -snapshots: Start/Stop dumping snapshots of the world into the current directory\n    -world -profiletraces: ProfileRecordedTraces\n    -world -agg: current aggregate data registry (loaded resources)\n",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 814
    },
    "phys_mark_debug": {
        "description": "Mark object for debug",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 617
    },
    "phys_record_rays": {
        "description": "Dump physics main world to file",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 811
    },
    "phys_record_rays_and_world": {
        "description": "Dump traces physics main world to file",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 812
    },
    "phys_shoot": {
        "description": "Shoots a phys object.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 618
    },
    "phys_sleep": {
        "description": "Put all physics in all the worlds to sleep",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 815
    },
    "phys_wakeup": {
        "description": "Wake all physics objects in the Main physics up",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 816
    },
    "physics_add_test": {
        "description": "add test object",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 820
    },
    "physics_debug_entity": {
        "description": "Dumps debug info for an entity",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 616
    },
    "physics_highlight_active": {
        "description": "Turns on the absbox for all active physics objects.\n  0 : un-highlight.\n",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 818
    },
    "physics_remove_test": {
        "description": "remove test object",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 821
    },
    "physics_report_active": {
        "description": "Lists all active physics objects\n  -more : extra info\n",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 819
    },
    "pixelvis_debug": {
        "description": "Dump debug info",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 408
    },
    "play": {
        "description": "Play a sound.",
        "flags": "server_can_execute",
        "flagsRaw": 16777216,
        "hasDefensiveFlag": false,
        "index": 328
    },
    "playcast": {
        "description": "Play a broadcast",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 211
    },
    "playdemo": {
        "description": "Play a recorded demo file (.dem ).",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 143
    },
    "playdemo_scripted": {
        "description": "Play a demo with an associated markup script.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1120
    },
    "playsound": {
        "description": "playsound <soundname>",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 98
    },
    "playsoundscape": {
        "description": "Forces a soundscape to play",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1371
    },
    "playvol": {
        "description": "Play a sound at a specified volume.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 329
    },
    "png_screenshot": {
        "description": "Take a .png screenshot: png_screenshot [filename]",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 97
    },
    "pop_var_values": {
        "description": "Restore previously pushed convars and config values",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 56
    },
    "popups_force_close": {
        "description": "Force close all the popups, useful when popup layout breaks after live editing",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1198
    },
    "print_changed_convars": {
        "description": "Prints all convars that have changed from their default value",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 134
    },
    "print_model_bind_pose": {
        "description": "Prints the bind pose of the specified model. Optionally limits to a particular bone and its parent chain, otherwise prints the entire skeleton.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 312
    },
    "print_ti8_challenges": {
        "description": "print_ti8_challenges",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1294
    },
    "progress_enable": {
        "description": "",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 229
    },
    "projection_reload_ability_data": {
        "description": "Reload ability_projection.txt",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1277
    },
    "prop_debug": {
        "description": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 713
    },
    "prop_dynamic_create": {
        "description": "Creates a dynamic prop with a specific .vmdl aimed away from where the player is looking.\n\tArguments: {.vmdl name}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 621
    },
    "prop_physics_create": {
        "description": "Creates a physics prop with a specific .vmdl aimed away from where the player is looking.\n\tArguments: {.vmdl name}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 619
    },
    "pulse_debug_print": {
        "description": "Usage: pulse_debug_print <vpulse_resource>",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 422
    },
    "pulse_list_graphs": {
        "description": "List all the active pulse graph instances",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 423
    },
    "pulse_open_graph_id": {
        "description": "Open a specific graph instance by id",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 424
    },
    "pulse_print_graph_execution_history": {
        "description": "Prints the execution history of a graph by filename or instanceid",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 425
    },
    "push_var_values": {
        "description": "Save convars and config values",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 55
    },
    "quit": {
        "description": "Quit the game",
        "flags": "release, vconsole_set_focus",
        "flagsRaw": 134742016,
        "hasDefensiveFlag": false,
        "index": 120
    },
    "r_camerapos": {
        "description": "Prints out the current camera position + orientation to the console",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 1510
    },
    "r_cleardecals": {
        "description": "Clears all decals",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1524
    },
    "r_dx11_report_live_objects": {
        "description": "Prints out live D3D11 objects (requires -dx11debug)",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 261
    },
    "r_entpos": {
        "description": "Moves the camera position + orientation to the named entity",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 1513
    },
    "r_force_engine_render_frame": {
        "description": "Force a single render of the engine viewport.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 94
    },
    "r_gpu_mem_stats": {
        "description": "Display GPU memory usage.",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 260
    },
    "r_incrementlodscale": {
        "description": "Modifies the LOD scale",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 1511
    },
    "r_print_texture_stats": {
        "description": "Texture stats",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 259
    },
    "r_printdecalinfo": {
        "description": "Prints info about decals currently in the scene",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1527
    },
    "r_render_coordination_state": {
        "description": "Prints out the current render coordination state.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 93
    },
    "r_renderdoc_capture_frame": {
        "description": "Triggers a RenderDoc capture",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 263
    },
    "r_renderdoc_capture_window_dx11": {
        "description": "Triggers a RenderDoc capture of a specific Window",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 264
    },
    "r_setpos": {
        "description": "Moves the camera position + orientation to the specified position",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 1512
    },
    "r_textures_evict_all": {
        "description": "Evict all resident texture.",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 262
    },
    "r_toggleviewportsize": {
        "description": "Toggles viewport size between small + full window.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 91
    },
    "r_viewport": {
        "description": "Slams viewport size to a specified value.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 92
    },
    "rangefinder": {
        "description": "Measures distance along a ray",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 564
    },
    "rangefinder2d": {
        "description": "Measures distance along a ray, only measuring along XY plane.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 565
    },
    "ray_bench": {
        "description": "Load the rays and run the benchmark",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 817
    },
    "rcon": {
        "description": "Issue an rcon command.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 172
    },
    "record": {
        "description": "Record a demo.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 140
    },
    "redirectend": {
        "description": "Redirect server console output",
        "flags": "hidden, release",
        "flagsRaw": 524304,
        "hasDefensiveFlag": false,
        "index": 197
    },
    "redirectstart": {
        "description": "Redirect server console output",
        "flags": "hidden, release",
        "flagsRaw": 524304,
        "hasDefensiveFlag": false,
        "index": 196
    },
    "reload_challenges": {
        "description": "reload_challenges",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1295
    },
    "reload_game_keyvalues": {
        "description": "Reloads hero and ability keyvalues files",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 665
    },
    "reload_model": {
        "description": "Force a reload of a vmdl resource",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 313
    },
    "reload_neutral_camp_pull": {
        "description": "Dev reload the camp pull data",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 996
    },
    "reload_portrait_background_maps": {
        "description": "reloads all portrait background maps",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1231
    },
    "reloadgame": {
        "description": "Reload the most recent saved game.",
        "flags": "cheat, vconsole_set_focus",
        "flagsRaw": 134234112,
        "hasDefensiveFlag": false,
        "index": 77
    },
    "remove_weapon": {
        "description": "Remove a weapon held by the player.\n\tArguments: <weapon subclass name>",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 743
    },
    "removeid": {
        "description": "Remove a user ID from the ban list.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 191
    },
    "removeip": {
        "description": "Remove an IP address from the ban list.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 187
    },
    "repeat_last_console_command": {
        "description": "Repeat last console command.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 70
    },
    "replay_death": {
        "description": "start hltv replay of last death",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 560
    },
    "replay_start": {
        "description": "Start GOTV replay: replay_start <delay> [<player name or index>]",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 559
    },
    "replay_stop": {
        "description": "stop hltv replay",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 561
    },
    "report_entities": {
        "description": "Lists all entities",
        "flags": "devonly, game, cheat",
        "flagsRaw": 16390,
        "hasDefensiveFlag": false,
        "index": 731
    },
    "report_simthinklist": {
        "description": "Lists all simulating/thinking entities",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 824
    },
    "report_soundpatch": {
        "description": "reports sound patch count",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 628
    },
    "request_top_streams": {
        "description": "Get a list of top dota streams on twitch",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 932
    },
    "reset_gameconvars": {
        "description": "Reset game convars to default values",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 207
    },
    "reset_notifications_viewed": {
        "description": "Resets the list of notifications viewed",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1089
    },
    "resource_leaks": {
        "description": "resource_leaks <resource_name>: Show resource leaks for the named resource",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 258
    },
    "resource_list": {
        "description": "List loaded resources matching a substring",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 255
    },
    "resource_log_allocate_timing": {
        "description": "Log time spent in Allocate for all resource types",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 256
    },
    "resource_manifest_validate_modules": {
        "description": "Scan all of the loaded modules and validate any resource manifests found",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 254
    },
    "resource_repeated_reload": {
        "description": "resource_repeated_reload <count> <resource_name> (<resource name> ...): Load and unload the specified resource(s)",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 253
    },
    "resource_reset_allocate_timing": {
        "description": "Reset tracked time spent in Allocate (see resource_log_allocate_timing)",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 257
    },
    "respawn_player": {
        "description": "Respawns the player from death!\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 558
    },
    "restart": {
        "description": "Poor man's restart: reload the current map from disk.",
        "flags": "cheat, vconsole_set_focus",
        "flagsRaw": 134234112,
        "hasDefensiveFlag": false,
        "index": 76
    },
    "rr_findrules": {
        "description": "Search and list rules by substring.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 706
    },
    "rr_findrules_verbose": {
        "description": "Search and list rules by substring.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 707
    },
    "rr_forceconcept": {
        "description": "fire a response concept directly at a given character.\nUSAGE: rr_forceconcept <target> <concept> \"criteria1:value1,criteria2:value2,...\"\ncriteria values are optional.\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 745
    },
    "rr_reloadresponsesystems": {
        "description": "Reload all response system scripts.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 705
    },
    "rs_dump_stats": {
        "description": "rs_dump_stats - Dump resourcesystem stats.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 252
    },
    "run_perftest": {
        "description": "Execute perftest.cfg",
        "flags": "cheat, norecord",
        "flagsRaw": 147456,
        "hasDefensiveFlag": false,
        "index": 54
    },
    "save": {
        "description": "Save Game",
        "flags": "devonly, game, norecord",
        "flagsRaw": 131078,
        "hasDefensiveFlag": true,
        "index": 723
    },
    "save_animgraph_recording": {
        "description": "Saves all active animgraph recordings to disk",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 797
    },
    "save_clear_subdirectory": {
        "description": "",
        "flags": "devonly, game, replicated",
        "flagsRaw": 8198,
        "hasDefensiveFlag": true,
        "index": 722
    },
    "save_finish_async": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 727
    },
    "save_set_subdirectory": {
        "description": "",
        "flags": "devonly, game, replicated",
        "flagsRaw": 8198,
        "hasDefensiveFlag": true,
        "index": 721
    },
    "save_showelapsedtime": {
        "description": "display up-to-date elapsed play time",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 728
    },
    "save_watchclass": {
        "description": "Restrict spew to entities with matching classname",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 729
    },
    "save_watchentity": {
        "description": "Restrict spew to entity index",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 730
    },
    "say": {
        "description": "Display player message",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 579
    },
    "say_team": {
        "description": "Display player message to team",
        "flags": "game",
        "flagsRaw": 33554436,
        "hasDefensiveFlag": false,
        "index": 580
    },
    "sc_dumpworld": {
        "description": "Dump a list of the objects in a sceneworld (Usage: sc_dumpworld <world_index>)",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 413
    },
    "sc_dumpworld3d": {
        "description": "Dump the objects in a sceneworld into a 3d geoview buffer (Usage: sc_dumpworld3d <world_index>)",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 414
    },
    "sc_list_extradata_allocations": {
        "description": "Prints out the overall extra data allocation counts",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 411
    },
    "sc_listworlds": {
        "description": "List all the active sceneworlds",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 412
    },
    "sc_setclassflags": {
        "description": "Low level command to set the flags byte associated with an object class. sc_SetClassFlags <classname> <value>\n",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 410
    },
    "sc_showclasses": {
        "description": "List the object class names known by scenesystem\n",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 409
    },
    "scene_flush": {
        "description": "Flush all .vcds from the cache and reload from disk.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 627
    },
    "scene_playvcd": {
        "description": "Play the given VCD as an instanced scripted scene.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 625
    },
    "schema_all_list_bindings": {
        "description": "schema_all_list_bindings <substring> - List all scopes registered schema bindings (classes & enums). If no substring, list them all.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 247
    },
    "schema_detailed_class_layout": {
        "description": "schema_detailed_class_layout <class_name> - Print a detailed memory layout of the class (including inline structs).",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 249
    },
    "schema_dump_binding": {
        "description": "schema_dump_binding <class_or_enum_name> - Print information about the named class or enum.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 248
    },
    "schema_list_bindings": {
        "description": "schema_list_bindings <substring> - List registered global-scope schema bindings (classes & enums). If no substring, list them all.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 246
    },
    "schema_meta_stats": {
        "description": "schema_meta_stats [<options>]- Print a summary of schemasystem metadata statistics.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 251
    },
    "schema_stats": {
        "description": "schema_stats - Print a summary of various schemasystem statistics.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 250
    },
    "screenshot": {
        "description": "Take a screenshot: screenshot [filename]",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 95
    },
    "script_add_debug_filter": {
        "description": "Add a filter to the game debug overlay",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 837
    },
    "script_add_watch": {
        "description": "Add a watch to the game debug overlay",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 833
    },
    "script_add_watch_pattern": {
        "description": "Add a watch to the game debug overlay",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 835
    },
    "script_attach_debugger": {
        "description": "Connect the vscript VM to the script debugger",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 831
    },
    "script_clear_watches": {
        "description": "Clear all watches from the game debug overlay",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 845
    },
    "script_debug": {
        "description": "Toggle the in-game script debug features",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 832
    },
    "script_dump_all": {
        "description": "Dump the state of the VM to the console",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 852
    },
    "script_find": {
        "description": "Find a key in the VM ",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 846
    },
    "script_help": {
        "description": "Output help for script functions",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 850
    },
    "script_help2": {
        "description": "Output help for script functions suitable for auto-completion",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 851
    },
    "script_reload": {
        "description": "Reload scripts",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 830
    },
    "script_reload_code": {
        "description": "Execute a vscript file, replacing existing functions with the functions in the run script",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 848
    },
    "script_reload_entity_code": {
        "description": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 849
    },
    "script_remove_debug_filter": {
        "description": "Remove a filter from the game debug overlay",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 838
    },
    "script_remove_watch": {
        "description": "Remove a watch from the game debug overlay",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 834
    },
    "script_remove_watch_pattern": {
        "description": "Remove a watch from the game debug overlay",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 836
    },
    "script_resurrect_unreachable": {
        "description": "Use the garbage collector to track down reference cycles",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 847
    },
    "script_trace_disable": {
        "description": "Turn off a particular trace output by file or function name",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 840
    },
    "script_trace_disable_all": {
        "description": "Turn off all trace output",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 844
    },
    "script_trace_disable_key": {
        "description": "Turn off a particular trace output by table/instance",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 842
    },
    "script_trace_enable": {
        "description": "Turn on a particular trace output by file or function name",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 839
    },
    "script_trace_enable_all": {
        "description": "Turn on all trace output",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 843
    },
    "script_trace_enable_key": {
        "description": "Turn on a particular trace output by table/instance",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 841
    },
    "scripted_demo_restart": {
        "description": "Play a demo with an associated markup script.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1121
    },
    "scrubber": {
        "description": "Scrub system off - not a dev build",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 18
    },
    "sdr": {
        "description": "An old command that has been renamed to 'net_option'",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 302
    },
    "send_match_metadata": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 516
    },
    "server_game_time": {
        "description": "Gives the game time in seconds (server's curtime)",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 633
    },
    "server_gc_status": {
        "description": "Check status of connection to the GC",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 518
    },
    "servervoice_clear": {
        "description": "servervoice_clear",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1369
    },
    "servervoice_dump": {
        "description": "servervoice_dump",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1368
    },
    "set_notifications_viewed_date": {
        "description": "Sets most recent time that you viewed notifications",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1090
    },
    "setang": {
        "description": "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 588
    },
    "setang_exact": {
        "description": "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 590
    },
    "setinfo": {
        "description": "Adds a new user info value",
        "flags": "clientcmd_can_execute",
        "flagsRaw": 268435456,
        "hasDefensiveFlag": false,
        "index": 205
    },
    "setmodel": {
        "description": "Changes's player's model",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 583
    },
    "setpause": {
        "description": "Set the pause state of the server.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 83
    },
    "setpos": {
        "description": "Move player to specified origin (must have sv_cheats).",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 586
    },
    "setpos_exact": {
        "description": "Move player to an exact specified origin (must have sv_cheats).",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 589
    },
    "setpos_player": {
        "description": "Move specified player to specified origin (must have sv_cheats).",
        "flags": "game, cheat",
        "flagsRaw": 33570820,
        "hasDefensiveFlag": false,
        "index": 587
    },
    "shake": {
        "description": "Shake the screen.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 604
    },
    "shake_stop": {
        "description": "Stops all active screen shakes.\n",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1206
    },
    "shake_testpunch": {
        "description": "Test a punch-style screen shake.\n",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1207
    },
    "shop_nav_to_search": {
        "description": "with the shop open, makes the search box active",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 859
    },
    "shop_nav_to_tab": {
        "description": "switch to a particular shop tab ( 0 - 12 )",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 858
    },
    "shop_select_itemrow": {
        "description": "buy ( or set quickbuy with shift held ) a particular displayed row",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 860
    },
    "show_sf_shop": {
        "description": "show shop",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1132
    },
    "showconsole": {
        "description": "Show the console.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 39
    },
    "showtriggers": {
        "description": "Enable or Disable showing trigger entities",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 632
    },
    "showtriggers_toggle": {
        "description": "Displays the movement bounding box for the triggers in orange.  Some entites will also display entity specific overlays.\n\tArguments:   \t{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 631
    },
    "simulate_player_cards_ti9": {
        "description": "Simulate the opening of card packs.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1022
    },
    "slot0": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1217
    },
    "slot1": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1208
    },
    "slot10": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1218
    },
    "slot2": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1209
    },
    "slot3": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1210
    },
    "slot4": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1211
    },
    "slot5": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1212
    },
    "slot6": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1213
    },
    "slot7": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1214
    },
    "slot8": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1215
    },
    "slot9": {
        "description": "",
        "flags": "client, server_can_execute",
        "flagsRaw": 16777224,
        "hasDefensiveFlag": false,
        "index": 1216
    },
    "snapto": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1395
    },
    "snd_arrangement_start": {
        "description": "Starts the specified arrangement.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 406
    },
    "snd_async_flush": {
        "description": "Flush all unlocked async audio data",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 342
    },
    "snd_async_showmem": {
        "description": "Show async memory stats",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 343
    },
    "snd_async_showmem_music": {
        "description": "Show async memory stats for just non-streamed music",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 345
    },
    "snd_async_showmem_summary": {
        "description": "Show brief async memory stats",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 344
    },
    "snd_cast": {
        "description": "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically if cl_snd_cast_retrigger is set. The sound event will clear previous snd_cast events if cl_snd_cast_clear is set. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 370
    },
    "snd_compare_soundevents": {
        "description": "Compare the compiled and loaded contents of 2 soundevents.",
        "flags": "devonly, cheat",
        "flagsRaw": 16386,
        "hasDefensiveFlag": false,
        "index": 347
    },
    "snd_front_headphone_position": {
        "description": "Specifies the position (in degrees) of the virtual front left/right headphones.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 314
    },
    "snd_front_stereo_speaker_position": {
        "description": "Specifies the position (in degrees) of the virtual front left/right speakers.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 316
    },
    "snd_front_surround_speaker_position": {
        "description": "Specifies the position (in degrees) of the virtual front left/right speakers.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 318
    },
    "snd_get_physics_surface_properties": {
        "description": "Get physics surface properties for all the materials.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 358
    },
    "snd_headphone_pan_exponent": {
        "description": "Specifies the exponent for the pan xfade from phone to phone if the \"exp\" pan law is being used.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 321
    },
    "snd_headphone_pan_radial_weight": {
        "description": "Apply cos(angle) * weight before pan law",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 324
    },
    "snd_list_deferred_soundevents": {
        "description": "List all current deferred load soundevents",
        "flags": "devonly, cheat",
        "flagsRaw": 16386,
        "hasDefensiveFlag": false,
        "index": 351
    },
    "snd_list_soundevents": {
        "description": "List all available soundevents",
        "flags": "devonly, cheat",
        "flagsRaw": 16386,
        "hasDefensiveFlag": false,
        "index": 350
    },
    "snd_list_soundevents_by_stack": {
        "description": "List all available soundevents using specified stack name",
        "flags": "devonly, cheat",
        "flagsRaw": 16386,
        "hasDefensiveFlag": false,
        "index": 352
    },
    "snd_print_activetracks": {
        "description": "List all active tracks",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 405
    },
    "snd_print_arrangements": {
        "description": "List all available sequence arrangments",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 404
    },
    "snd_print_current_mixer_mixgroup": {
        "description": "Get data related to mix group matching string",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 341
    },
    "snd_print_samplers": {
        "description": "List all available samplers",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 396
    },
    "snd_print_sequences": {
        "description": "List all available midi sequences",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 399
    },
    "snd_print_soundevent": {
        "description": "Print the data associated with the specified soundevent.",
        "flags": "devonly, vconsole_fuzzy, vconsole_set_focus",
        "flagsRaw": 142606338,
        "hasDefensiveFlag": false,
        "index": 348
    },
    "snd_print_soundevent_default_public_properties": {
        "description": "Print the default public properties of a specified soundevent. Values do not reflect values set on the soundevent. For that see \"snd_print_soundevent\"",
        "flags": "devonly, vconsole_fuzzy, vconsole_set_focus",
        "flagsRaw": 142606338,
        "hasDefensiveFlag": false,
        "index": 349
    },
    "snd_rear_headphone_position": {
        "description": "Specifies the position  (in degrees) of the virtual rear left/right headphones.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 315
    },
    "snd_rear_stereo_speaker_position": {
        "description": "Specifies the position (in degrees) of the virtual rear left/right speakers.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 317
    },
    "snd_rear_surround_speaker_position": {
        "description": "Specifies the position (in degrees) of the virtual rear left/right speakers.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 319
    },
    "snd_remove_all_soundevents": {
        "description": "Remove all soundevents",
        "flags": "devonly, cheat",
        "flagsRaw": 16386,
        "hasDefensiveFlag": false,
        "index": 354
    },
    "snd_remove_soundevent": {
        "description": "Remove the specified soundevent",
        "flags": "devonly, cheat",
        "flagsRaw": 16386,
        "hasDefensiveFlag": false,
        "index": 353
    },
    "snd_samplers_play_note": {
        "description": "Play a note from a specified sampler",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 397
    },
    "snd_samplers_stop_note": {
        "description": "Stop a note from a specified sampler",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 398
    },
    "snd_sequence_set_track_bpm": {
        "description": "Sets the tempo of the specified track",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 402
    },
    "snd_sequence_set_track_transpose": {
        "description": "Sets the transposition of the specified track",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 403
    },
    "snd_sequence_stop_all_tracks": {
        "description": "Stops all currently playing sequences",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 401
    },
    "snd_sequence_stop_track": {
        "description": "Stops the specified track",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 400
    },
    "snd_set_physics_surface_properties": {
        "description": "Set physics surface properties for materials. Usage: <heuristic #> <commit>",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 359
    },
    "snd_setmixer": {
        "description": "Set named Mixgroup of current mixer to mix vol, mute, solo.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 333
    },
    "snd_setmixlayer": {
        "description": "Set named Mixgroup of named mix layer to mix vol, mute, solo.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 334
    },
    "snd_side_surround_speaker_position": {
        "description": "Specifies the position (in degrees) of the virtual rear left/right speakers.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 320
    },
    "snd_sos_cl_soundevent_pause_last": {
        "description": "Test",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1475
    },
    "snd_sos_cl_soundevent_start": {
        "description": "Test",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1473
    },
    "snd_sos_cl_soundevent_stop_last": {
        "description": "Test",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1474
    },
    "snd_sos_cl_soundevent_unpause_last": {
        "description": "Test",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1476
    },
    "snd_sos_compare_operator_stacks": {
        "description": "Compares 2 operator stacks and spews any errors",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 386
    },
    "snd_sos_flush_operators": {
        "description": "Flush and re-parse the sound operator system",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 378
    },
    "snd_sos_get_operator_field_info": {
        "description": "Currently gets info for a single operator field",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 376
    },
    "snd_sos_pause_soundevent": {
        "description": "Pause the specified soundevent in the list",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 372
    },
    "snd_sos_print_class_sizes": {
        "description": "Prints the sizes of relevant sos classes.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 395
    },
    "snd_sos_print_field_name_strings": {
        "description": "Prints a list of currently cached field name strings",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 383
    },
    "snd_sos_print_groups": {
        "description": "Prints the current state of the groups system",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 384
    },
    "snd_sos_print_operator_stack": {
        "description": "Prints a master list of currently exposed variables",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 387
    },
    "snd_sos_print_operator_stack_operator": {
        "description": "Prints an operator from a stack",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 388
    },
    "snd_sos_print_operator_stacks": {
        "description": "Prints a list of currently available stacks",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 381
    },
    "snd_sos_print_operators": {
        "description": "Prints a list of currently available operators",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 385
    },
    "snd_sos_print_stack_exec_list": {
        "description": "Prints the current stack execution list",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 389
    },
    "snd_sos_print_strings": {
        "description": "Prints a list of currently cached strings",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 382
    },
    "snd_sos_print_tool_properties": {
        "description": "Prints the current state of tool properties.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 379
    },
    "snd_sos_resolve_execute_operator": {
        "description": "Resolve the inputs and execute one specified operator from a specified stack",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 380
    },
    "snd_sos_set_operator_field": {
        "description": "Currently sets a single float operator field",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 374
    },
    "snd_sos_set_operator_field_by_guid": {
        "description": "Currently sets a single float operator field",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 375
    },
    "snd_sos_soundevent_profile": {
        "description": "Dump a record of current soundevents and profile data",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 377
    },
    "snd_sos_start_soundevent": {
        "description": "Starts a specified soundevent",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 390
    },
    "snd_sos_start_soundevent_at_pos": {
        "description": "Starts a specified soundevent at the given position",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 391
    },
    "snd_sos_stop_all_soundevents": {
        "description": "Stops all soundevents currently on the execution list",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 394
    },
    "snd_sos_stop_soundevent_guid": {
        "description": "Stops a specified soundevent",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 392
    },
    "snd_sos_stop_soundevent_index": {
        "description": "Stops a specified soundevent",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 393
    },
    "snd_sos_sv_soundevent_pause_last": {
        "description": "Test",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 828
    },
    "snd_sos_sv_soundevent_start": {
        "description": "Test",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 825
    },
    "snd_sos_sv_soundevent_stop_last": {
        "description": "Test",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 826
    },
    "snd_sos_sv_soundevent_unpause_last": {
        "description": "Test",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 829
    },
    "snd_sos_sv_test_gender": {
        "description": "Test",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 827
    },
    "snd_sos_test_soundmessage": {
        "description": "test",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 371
    },
    "snd_sos_unpause_soundevent": {
        "description": "UnPause the first soundevent in the list",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 373
    },
    "snd_soundevent_clear_deferred": {
        "description": "Clear the list of deferred soundevents for loading.",
        "flags": "devonly, cheat",
        "flagsRaw": 16386,
        "hasDefensiveFlag": false,
        "index": 355
    },
    "snd_soundmixer_flush": {
        "description": "Reload soundmixers.txt file.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 337
    },
    "snd_soundmixer_list_mix_groups": {
        "description": "List all mix groups to dev console.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 340
    },
    "snd_soundmixer_list_mix_layers": {
        "description": "List all mix layers to dev console.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 339
    },
    "snd_soundmixer_list_mixers": {
        "description": "List all mixers to dev console.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 338
    },
    "snd_soundmixer_set_trigger_factor": {
        "description": "Set named mix layer / mix group, trigger amount.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 336
    },
    "snd_soundmixer_setmixlayer_amount": {
        "description": "Set named mix layer mix amount.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 335
    },
    "snd_steamaudio_display_probes": {
        "description": "Load all the probes from a file and display probes based on the passed on arguments.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 357
    },
    "snd_steamaudio_export_scene": {
        "description": "Exports scene currently used by Steam Audio as a phononscene file.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 356
    },
    "snd_stereo_speaker_pan_exponent": {
        "description": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 322
    },
    "snd_stereo_speaker_pan_radial_weight": {
        "description": "Apply cos(angle) * weight before pan law",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 325
    },
    "snd_surround_speaker_pan_exponent": {
        "description": "Specifies the exponent for the pan xfade from speaker to speaker if the \"exp\" pan law is being used.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 323
    },
    "snd_surround_speaker_pan_radial_weight": {
        "description": "Apply cos(angle) * weight before pan law",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 326
    },
    "snd_vmidi_flush": {
        "description": "Purge and reload all vmidi data and files.",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 407
    },
    "sndplaydelay": {
        "description": "",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 332
    },
    "soundinfo": {
        "description": "Describe the current sound device with an active voice list.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 331
    },
    "soundlist": {
        "description": "List all known sounds.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 369
    },
    "soundscape_dumpclient": {
        "description": "Dumps the client's soundscape data.\n",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1344
    },
    "soundscape_flush": {
        "description": "Flushes the server & client side soundscapes",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 629
    },
    "soundsysteminfo": {
        "description": "Describe the current sound device without an active voice list.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 327
    },
    "spawn_group_activate": {
        "description": "Activate specified spawngroup.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 1515
    },
    "spawn_group_list": {
        "description": "List all spawn groups",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 1518
    },
    "spawn_group_load": {
        "description": "Load named spawn group.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 1516
    },
    "spawn_group_unload": {
        "description": "Unload named spawn group.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 1517
    },
    "spec_goto": {
        "description": "Move the spectator camera to a specific location. `spec_goto x y z pitch yaw`",
        "flags": "client, clientcmd_can_execute",
        "flagsRaw": 268435464,
        "hasDefensiveFlag": false,
        "index": 1350
    },
    "spec_mode": {
        "description": "Set spectator mode",
        "flags": "client, clientcmd_can_execute",
        "flagsRaw": 268435464,
        "hasDefensiveFlag": false,
        "index": 1348
    },
    "spec_next": {
        "description": "Spectate next player",
        "flags": "client, clientcmd_can_execute",
        "flagsRaw": 268435464,
        "hasDefensiveFlag": false,
        "index": 1346
    },
    "spec_player": {
        "description": "Spectate a player by name or slot",
        "flags": "client, clientcmd_can_execute",
        "flagsRaw": 268435464,
        "hasDefensiveFlag": false,
        "index": 1349
    },
    "spec_pos": {
        "description": "dump position and angles to the console",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1203
    },
    "spec_prev": {
        "description": "Spectate previous player",
        "flags": "client, clientcmd_can_execute",
        "flagsRaw": 268435464,
        "hasDefensiveFlag": false,
        "index": 1347
    },
    "spectator_lobby_create": {
        "description": "Create a dummy spectator lobby",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 922
    },
    "spectator_lobby_join": {
        "description": "Join specified spectator lobby",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 925
    },
    "spectator_lobby_leave": {
        "description": "Leave current spectator lobby",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 926
    },
    "spectator_lobby_list": {
        "description": "Request list of spectator lobbies from GC",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 924
    },
    "spectator_lobby_set_details": {
        "description": "Sets details on current spectator lobby",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 923
    },
    "spew_fonts": {
        "description": "Spew information about font manager fonts",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 287
    },
    "splitscreen_testreadconfigconflict": {
        "description": "",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 102
    },
    "ss_add": {
        "description": "Adds a splitscreen user.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 99
    },
    "ss_remove": {
        "description": "Removes a splitscreen user.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 100
    },
    "ss_teleport": {
        "description": "Teleport other splitscreen player to my location.",
        "flags": "devonly, client, cheat",
        "flagsRaw": 16394,
        "hasDefensiveFlag": false,
        "index": 1382
    },
    "startdemos": {
        "description": "Play demos in demo sequence.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 157
    },
    "startmovie": {
        "description": "Start recording movie frames.",
        "flags": "devonly, norecord",
        "flagsRaw": 131074,
        "hasDefensiveFlag": true,
        "index": 203
    },
    "stash_grab_all": {
        "description": "grab all items from the stash",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 882
    },
    "stat_dropdown": {
        "description": "Select a category in the spectator stats dropdown",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 862
    },
    "stat_dropdown_cycle": {
        "description": "Cycle through the stat dropdown categories in a specified direction (-1 = back, 1 = forward)",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 864
    },
    "stat_dropdown_sort": {
        "description": "Cycle through the stat dropdown sort methods",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 863
    },
    "stats": {
        "description": "Prints server performance variables",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 198
    },
    "stats_print": {
        "description": "Prints out perf statistics to the console, clears perf history",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 103
    },
    "stats_print_gpu": {
        "description": "Prints out GPU perf statistics to the console.  Requires stats_display > 0, and stats_collect_gpu = true.  Optional argument of CSV filename",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 104
    },
    "status": {
        "description": "Print connection status",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 80
    },
    "status_json": {
        "description": "Print status in JSON format",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 208
    },
    "steamvrevent_quit": {
        "description": "steamvrevent_quit",
        "flags": "devonly, game, hidden",
        "flagsRaw": 22,
        "hasDefensiveFlag": true,
        "index": 594
    },
    "stop": {
        "description": "Finish recording demo.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 139
    },
    "stopdemos": {
        "description": "Stop looping demos (current demo will complete).",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 160
    },
    "stopsound": {
        "description": "",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 330
    },
    "stopsoundscape": {
        "description": "Stops all soundscape processing and fades current looping sounds",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1372
    },
    "subclass_change": {
        "description": "Changes the subclass of the given entity.\n\tArguments:   \t<new_subclass> {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 555
    },
    "subclass_create": {
        "description": "Creates an entity of the given subclass where the player is looking.",
        "flags": "game, cheat, vconsole_fuzzy",
        "flagsRaw": 8404996,
        "hasDefensiveFlag": false,
        "index": 554
    },
    "surfaceprop": {
        "description": "Reports the surface properties at the cursor",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 615
    },
    "sv_clientrates": {
        "description": "Show client rates.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 184
    },
    "sv_dev_simulate_gcdown": {
        "description": "<state> Turn on/off simulated GC communications failure (GC is down in a way that we know it is down)",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 522
    },
    "sv_dota_custom_game_cache_test_download": {
        "description": "<custom game ID> [<expected_timestamp>].  Test code to cache UGC to dedicated server",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 519
    },
    "sv_dota_dump_econ_item_stringtable": {
        "description": "sv_dota_dump_econ_item_stringtable",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 453
    },
    "sv_dota_dump_modifier_stringtable": {
        "description": "sv_dota_dump_modifier_stringtable",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 658
    },
    "sv_dota_spoof_player_resource_request": {
        "description": "Spoofs a player resource request",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 468
    },
    "sv_fullupdate": {
        "description": "Force a full update for all clients.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 179
    },
    "sv_metaduplication": {
        "description": "Check serializer meta for duplication, add verbose to command for full spew",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 201
    },
    "sv_packstats": {
        "description": "Show entity packing stats, pass 'clear' as argument to reset counts.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 195
    },
    "sv_pure": {
        "description": "Show user data.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 178
    },
    "sv_querycache_stats": {
        "description": "Display status of the query cache (client only)",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 624
    },
    "sv_record_bone_setup_stats": {
        "description": "generate bone setup statistics",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 744
    },
    "sv_setsteamaccount": {
        "description": "token\nSet game server account token to use for logging in to a persistent game server account",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 202
    },
    "sv_showtags": {
        "description": "Describe current gametags.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 183
    },
    "sv_shutdown": {
        "description": "Sets the server to shutdown when all games have completed",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 182
    },
    "sv_soundscape_printdebuginfo": {
        "description": "print soundscapes",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 630
    },
    "sv_spewmeta": {
        "description": "Spew serializer meta",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 200
    },
    "sv_spewworldgroups": {
        "description": "Spew world groups (server)",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 181
    },
    "sys_info": {
        "description": "Print system information to the console",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 136
    },
    "telemetry_message": {
        "description": "Place a message in the telemetry timeline",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 562
    },
    "telemetry_toggle_timespan": {
        "description": "Starts/stops a timespan with an ever increasing name.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 563
    },
    "test_challenge_rank_up": {
        "description": "test_challenge_rank_up",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 853
    },
    "test_compendium_endgame_stats": {
        "description": "test_compendium_endgame_stats",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 642
    },
    "test_compendium_level_popup": {
        "description": "Test popup for receiving compendium level",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1047
    },
    "test_compendium_stats": {
        "description": "test_compendium_stats",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 641
    },
    "test_dispatcheffect": {
        "description": "Test a clientside dispatch effect.\n\tUsage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>\n\tDefaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>\n",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 584
    },
    "test_entity_blocker": {
        "description": "Test command that drops an entity blocker out in front of the player.",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 597
    },
    "test_gameend": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1083
    },
    "test_hud_skin": {
        "description": "Test panorama HUD skin",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1084
    },
    "test_list_entities": {
        "description": "test-list entities",
        "flags": "game, cheat",
        "flagsRaw": 16388,
        "hasDefensiveFlag": false,
        "index": 823
    },
    "test_prediction_results": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 985
    },
    "test_seasonpass_cm_game": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1063
    },
    "test_seasonpass_cm_game_event": {
        "description": "",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1064
    },
    "test_trophy_achieved": {
        "description": "Show trophy upgraded dialog",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 1065
    },
    "test_voice_container_nesting": {
        "description": "Test nesting voice containers.",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 368
    },
    "test_voice_containers": {
        "description": "Quick example for how we'd derive traits from voice containers.",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 363
    },
    "thirdperson": {
        "description": "Switch to thirdperson camera.",
        "flags": "client, cheat, execute_per_tick",
        "flagsRaw": 536887304,
        "hasDefensiveFlag": false,
        "index": 1386
    },
    "thirdperson_mayamode": {
        "description": "Switch to thirdperson Maya-like camera controls.",
        "flags": "client, cheat",
        "flagsRaw": 16392,
        "hasDefensiveFlag": false,
        "index": 1388
    },
    "thirdpersonshoulder": {
        "description": "Switch to thirdperson-shoulder camera.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1389
    },
    "timedemo": {
        "description": "Play a demo and report performance info.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 144
    },
    "timedemoquit": {
        "description": "Play a demo, report performance info, and then exit",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 145
    },
    "toggle": {
        "description": "Toggles specified convar value on and off.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 47
    },
    "toggleconsole": {
        "description": "Show/hide the console.",
        "flags": "norecord, release",
        "flagsRaw": 655360,
        "hasDefensiveFlag": false,
        "index": 237
    },
    "toggleshoppanel": {
        "description": "toggles shop",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1134
    },
    "top_bar_message": {
        "description": "test top bar status message. usage: top_bar_message [\"message here\"] [scary: 0/1] ",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1199
    },
    "treasure_peek_details": {
        "description": "Displays details about the peek status of the currently open treasure",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1068
    },
    "tutorial_cleanup_post": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 480
    },
    "tutorial_experience_closed": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 481
    },
    "tutorial_speech_end": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 478
    },
    "tutorial_start_lesson": {
        "description": "Jump to the passed tutorial lesson",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 482
    },
    "tutorial_testui": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 477
    },
    "tutorial_tip_dismissed": {
        "description": "",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 479
    },
    "tv_broadcast_resend": {
        "description": "resend broadcast data to broadcast relay",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 212
    },
    "tv_broadcast_status": {
        "description": "Print out broadcast status",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 218
    },
    "tv_clients": {
        "description": "Shows list of connected SourceTV clients.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 220
    },
    "tv_mem": {
        "description": "hltv memory statistics. Use with \"ent 10\" (dump entity 10 memory usage) or \"top 8\" (dump top 8 memory users) or \"class\" CWorld (dump CWorld class)",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 221
    },
    "tv_msg": {
        "description": "Send a screen message to all clients.",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": true,
        "index": 606
    },
    "tv_record": {
        "description": "Starts SourceTV demo recording.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 217
    },
    "tv_relay": {
        "description": "Connect to SourceTV server and relay broadcast.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 214
    },
    "tv_retry": {
        "description": "Reconnects the SourceTV relay proxy.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 216
    },
    "tv_status": {
        "description": "Show SourceTV server status.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 213
    },
    "tv_stop": {
        "description": "Stops the SourceTV broadcast.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 215
    },
    "tv_stoprecord": {
        "description": "Stops SourceTV demo recording.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 219
    },
    "unbind": {
        "description": "Unbind a key.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 62
    },
    "unbindall": {
        "description": "Unbind all keys.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 61
    },
    "unpause": {
        "description": "Clear the pause state of the server.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 84
    },
    "unsubscribe_all_game_modes": {
        "description": "Unsubscribes from all custom games. They will be uninstalled by the Steam client when you close Dota 2.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 890
    },
    "unsubscribe_custom_game": {
        "description": "Stops subscribing to a specific custom game. It will be uninstalled when you exit Dota 2.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 889
    },
    "update_lane_creep_gold_bounty": {
        "description": "Update gold bounty for lane creeps.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 999
    },
    "update_neutral_creep_gold_bounty": {
        "description": "Update gold bounty for neutral creeps.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": false,
        "index": 998
    },
    "url_execute": {
        "description": "Executes url-based commands, used for incoming commands from url-based launches when the game's already running.",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1339
    },
    "use_item_client": {
        "description": "Use the item in the indicated slot. <hero name> <slot name>",
        "flags": "client, norecord, clientcmd_can_execute",
        "flagsRaw": 268566536,
        "hasDefensiveFlag": false,
        "index": 891
    },
    "users": {
        "description": "Show user info for players on server.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 180
    },
    "v8_write_heap_stats": {
        "description": "Dump output of v8::Isolate::GetHeapStatistics.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": false,
        "index": 421
    },
    "validate_challenges": {
        "description": "validate_challenges",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 637
    },
    "vis_debug_currentcluster": {
        "description": "Show the current cluster number",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 35
    },
    "vis_debug_drawcluster": {
        "description": "Add cluster # to visualization, (-1) to clear",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 37
    },
    "vis_debug_dumpvisibleclusters": {
        "description": "Show the list of visible clusters",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 36
    },
    "vis_debug_find_los": {
        "description": "Find or clear the vis LOS to here",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 32
    },
    "vis_debug_lock": {
        "description": "Lock vis LOS origin to current",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 34
    },
    "vis_debug_record_start": {
        "description": "Record a path to debug vis",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 30
    },
    "vis_debug_record_stop": {
        "description": "Record a path to debug vis",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 31
    },
    "vis_debug_show": {
        "description": "Show/hide the vis debug visualization",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 28
    },
    "vis_debug_sunclusters": {
        "description": "Showing clusters for sun/csm rendering. Red (full sun csm & lighting), Orange (no viewmodel sun or csm), Green (no sun at all)",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 29
    },
    "vis_debug_tracelos": {
        "description": "Trace rays and check vis from the current camera",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 33
    },
    "vmem_dump": {
        "description": "Dump memory stats to log.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 117
    },
    "vmix_debug_list": {
        "description": "Debug dump the list of available vmix graphs",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 360
    },
    "vmix_input": {
        "description": "Set an input mix value",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 361
    },
    "vmix_output": {
        "description": "Dump main graph control output values",
        "flags": "cheat",
        "flagsRaw": 16384,
        "hasDefensiveFlag": false,
        "index": 362
    },
    "voice_containers_get_instance_args": {
        "description": "Args: [Voice Container Path]",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 366
    },
    "voice_containers_get_instance_params": {
        "description": "Args: [Voice Container Path]",
        "flags": "linked, devonly",
        "flagsRaw": 3,
        "hasDefensiveFlag": true,
        "index": 365
    },
    "vprof_dump_counters": {
        "description": "Dump vprof counters to the console",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 114
    },
    "vprof_generate_report": {
        "description": "Generate a report to the console.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 109
    },
    "vprof_generate_report_budget": {
        "description": "Generate a report to the console based on budget group.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 110
    },
    "vprof_generate_report_hierarchy": {
        "description": "Generate a report to the console.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 111
    },
    "vprof_loadhitstore_scale": {
        "description": "Scale used when displaying load-hit-stores (0 = use default)",
        "flags": "devonly, hidden",
        "flagsRaw": 18,
        "hasDefensiveFlag": false,
        "index": 113
    },
    "vprof_off": {
        "description": "Disable vprof",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 106
    },
    "vprof_on": {
        "description": "Enable vprof",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 105
    },
    "vprof_remote_start": {
        "description": "Request a VProf data stream from the remote server (requires authentication)",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 170
    },
    "vprof_remote_stop": {
        "description": "Stop an existing remote VProf data request",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 171
    },
    "vprof_reset": {
        "description": "Reset the stats in VProf profiler",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 107
    },
    "vprof_reset_peaks": {
        "description": "Reset just the peak time in VProf profiler",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 108
    },
    "vprof_time_scale": {
        "description": "Scale used when displaying time (0 = use default)",
        "flags": "devonly, hidden",
        "flagsRaw": 18,
        "hasDefensiveFlag": false,
        "index": 112
    },
    "vtune": {
        "description": "Controls VTune's sampling.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 142
    },
    "watch_server": {
        "description": "Watch a server steam id",
        "flags": "devonly, client",
        "flagsRaw": 10,
        "hasDefensiveFlag": true,
        "index": 1172
    },
    "weapon_switch": {
        "description": "Use a particular weapon\t\nArguments: <weapon_name>",
        "flags": "devonly, game",
        "flagsRaw": 6,
        "hasDefensiveFlag": false,
        "index": 742
    },
    "world_dump_loaded_worlds": {
        "description": "Dump all of the worlds that we know about",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 420
    },
    "world_layer_list": {
        "description": "List all world layers",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 418
    },
    "world_layer_set_visible": {
        "description": "Show or hide the specified world layer",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 419
    },
    "writeid": {
        "description": "Writes a list of permanently-banned user IDs to file.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 193
    },
    "writeip": {
        "description": "Save the ban list to file.",
        "flags": "devonly",
        "flagsRaw": 2,
        "hasDefensiveFlag": true,
        "index": 189
    },
    "writekeybindings": {
        "description": "Saves current key bindings to disk.",
        "flags": "release",
        "flagsRaw": 524288,
        "hasDefensiveFlag": false,
        "index": 64
    }
}